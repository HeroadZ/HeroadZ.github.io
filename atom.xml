<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>醉乐轩</title>
  
  <subtitle>以梦为马，醉乐其中。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://behappy.cc/"/>
  <updated>2019-01-02T11:45:13.114Z</updated>
  <id>http://behappy.cc/</id>
  
  <author>
    <name>Heroad</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2018，学会去拥抱！</title>
    <link href="http://behappy.cc/2019/01/02/2018-final/"/>
    <id>http://behappy.cc/2019/01/02/2018-final/</id>
    <published>2019-01-02T11:43:59.000Z</published>
    <updated>2019-01-02T11:45:13.114Z</updated>
    
    <content type="html"><![CDATA[<p>又到了年终小结的时候啦，彷佛又回到了高考考场上憋作文的时光，真是难熬呀！不过有一句话讲的挺好，未来的你一定是现在的你的忠实读者。为了不让未来的我没东西可读，还是努努力，向intel学习，挤点牙膏出来。</p><p>前两年的总结都是以回忆录的形式，随意散漫。今年其实想从各个不同的方面来剖析自己，虽然回忆录的形式也挺好的，不过尝试新的形式也是很有趣的。</p><h1 id="回顾过去"><a href="#回顾过去" class="headerlink" title="回顾过去"></a>回顾过去</h1><h2 id="1-年度关键词"><a href="#1-年度关键词" class="headerlink" title="1. 年度关键词"></a>1. 年度关键词</h2><p>感觉这个东西挺有意思的，b站今年的年度弹幕是“真实”，今年我也说过好多次，“这也太真实了吧！”什么的，有时候不分语境也能随便说哈哈哈。对我个人来说，印象最深刻的应该是“<strong>舔狗</strong>”和“<strong>寒冬</strong>”。</p><p>“舔狗”，日语里是“キープ君”，意思是情感关系中地位较低的一方，与前几年的“备胎”相差无几，但在联想方面更形象一点，调侃自嘲的意思更浓一些。这个词在虎扑论坛用的很多，基本都是一些小年轻跑到论坛来哭诉自己受到的情感中的委屈，下面第一个回复总是，“答应我，不要再做舔狗了好吗！”。不过你以为那么多人骂舔狗真的是为了对方好吗？其实他们骂的都是曾经的自己吧。</p><p>“寒冬”就不必说了，今年的经济形式貌似挺可怕的，不过我还没工作，没有近距离直面这种恐怖。在V2EX论坛上至少看过十几个裁员贴了，然后各种大厂最近都在裁员，真的是互联网寒冬。股市啊基金啊房价啊汇率啊感觉都很令人担忧，马上也要当社畜了，经常关注这些总没错的。不过我这里都是随便说说的，别问，问就是稳中向好，全面小康^_^。</p><h2 id="2-经济方面"><a href="#2-经济方面" class="headerlink" title="2. 经济方面"></a>2. 经济方面</h2><p>少时不识钱滋味，觉得俗，只想着做有趣的事就行，现在觉得很多事，都逃不过这东西。有句话说的挺对的，你觉得生活容易，是因为有人在帮你承担那份不容易。今年也几乎没有收入，算上日本和现在的兼职，也就1w出点头吧，消费倒是挺高的。在日本别的没感觉，对金钱的重要程度倒是有了新的感悟。但是对于挣钱理财方面的确还是知之甚少，今年算是起步阶段。</p><p>开始关注一些对汇率有影响的新闻和政策，微信关注了几个理财公众号，从里面学到了一些保险知识。以前对保险也是很抵触的情绪，觉得就是骗人的玩意。随着社会阅历的丰富，发现配置一些重疾险还是很有必要的，这貌似也是一种社会常识了，说到这个，支付宝最近推出的相互保也是引起了一阵波动，说明大家对保险还是挺重视的。</p><p>然后也学到了如何去分析房价和一些关于股票的消息。玩股票的朋友跟我说，最近几个月要见底了，可以入股玩一玩，赚的几率很高。不过不知为什么，我意欲不是很高，其实年初就意识到自己是一个很保守的人。如果对一个东西不了解，就不想去掺和，也不自信。我觉得要是我懂一些技术参数，应该会很有兴趣参与，不喜欢盲目，说到底还是不信任别人，喜欢自己操控一切的感觉。实际操作也只是在支付宝上也买了点定期和基金，算是重在参与。</p><h2 id="3-健康方面"><a href="#3-健康方面" class="headerlink" title="3. 健康方面"></a>3. 健康方面</h2><p>在日本的那段时间，身体有点亚健康了，天天吃的都是什么鬼，还是国内好。胖了很多，腹肌和胸肌都没多少了，不过最近回国天天工作，又瘦回来了。家附近也没什么地方跑步，感觉最有用的锻炼应该就是跑步了。</p><p>比较开心的是脸上的痘痘终于得到控制，现在脸上没痘了，剩下一些痘印和痘疤吧。感觉有一部分区域是真皮损伤，还不知道怎么解决，有空整个容？哈哈哈。在JINS重新配了副眼镜，度数居然比以前低了，惊了。感觉防蓝光还是有点作用的，眼镜现在很少发干难受了。因为一直拉肚子，回来做了个肠镜，也没查出什么毛病，可能都是心理问题。</p><h2 id="4-人脉与技能"><a href="#4-人脉与技能" class="headerlink" title="4. 人脉与技能"></a>4. 人脉与技能</h2><p>社会人脉方面以前也没有很重视，喜欢独来独往，总觉得很多都是无效社交。这次回国找工作的经历让我明白一个道理，上网投简历真的是下下策，找工作一定要利用人脉，这两种方式找的工作质量不是一个档次的。而且尤其在常州这种小城市，本来就很少能找到满意的互联网工作了。不过话说回来，人脉虽然很重要，但是不能多而不精，毕竟平常生活中能保持联系的人数是有限的。其实说来也可笑，慢慢自己交朋友的时候，目的性也越来越强，变成了以前不欣赏的那种人了，hhh。</p><p>职业技能方面，由于准备考试，对科班的计算机知识构建了一个比较完整的体系，对基础数学也有了个很全面的理解。最近在看机器学习和大数据的书，也是慢慢在往这方面靠了，挺好的，只是越来越浮躁，经常看不进去书，每天浑浑噩噩，需要一个压力来push我。</p><p>业务爱好方面，网球和口琴目前都荒废了，只有转笔还在坚持。然后今年新增加了一个技能，吉他，感觉还是挺好玩的。下面放一段才弹一个月的录音，以后坚持每年都记录对比一下。也是终于打通了基础乐理的盲点，希望我能在音乐的道路上发现更多好玩的。现在会理发了，不过只能帮别人理，这技能日了狗哈哈哈。看书看电影这些，我倒是从来没落下，不想学习的时候，只有看剧才能打发时间了。</p><audio controls height="100" width="100"><br>  <source src="/audio/scarborough_fair.mp3" type="audio/mpeg"><br>  <embed height="50" width="100" src="/audio/scarborough_fair.mp3"><br></audio><h2 id="5-情感方面"><a href="#5-情感方面" class="headerlink" title="5. 情感方面"></a>5. 情感方面</h2><p>经历了异国恋的分手，现在非常不看好以后也不想经历异地恋了。看shameless的时候，有句台词挺好玩的，<strong>“我们都是成年人了，不可能再轻易爱上别人了”</strong>，所以不要轻易的开始一段感情。然后就是不要花时间在得不到的人事上。关于男女情感方面的事，还是有很多疑惑的，比如现在男女性越来越对立，也越来越独立，该如何与女生相处也是个值得思考的问题。这一年09结婚了，阿岳生小孩了，老菊也结婚了，感叹自己是真的不再年轻了，而且还一事无成，迷茫呀。</p><p>再说说缺点，已经被很多人说过了，比较无趣。怎么说呢，也希望自己能豪气一点，做那种<strong>“天生我才必有用，千金散尽还复来”</strong>的狂人。然后在话术上面也很菜，什么时候能练到申屠那种境界就好了哈哈哈。有时候做个智慧的人和做个个性鲜明的人还是很矛盾的，能学会见人说人话见鬼说鬼话也是一件挺挑战挺有益处的事吧。说到这个，其实最近对算命挺感兴趣的，不知道什么时候会去深入了解一下。</p><h1 id="展望未来"><a href="#展望未来" class="headerlink" title="展望未来"></a>展望未来</h1><p>在2019年度，我的目标有这些：</p><blockquote><ol><li>年收入突破10wRMB</li><li>身体不再亚健康，腹肌胸肌都回来</li><li>吉他能够流畅的弹奏Hotel California</li><li>转笔能够转一个45秒以上的combo</li><li>去大厂（比如抖音）实习</li><li>托业考950，日语能达到日常交流的水平，交1-2个日本朋友</li></ol></blockquote><p>其实现在看来，也并没有什么进步，没什么令人惊喜的质的变化，很多方面都是起步阶段，一个涉世未深的少年要开始学会接受并去拥抱它们了。2019年，本命年，希望老天能多多关照我些。</p><p>PS: 今年的总结没有图，只有文字，晒秀的照片留在朋友圈就好，这边更适合放些认真的碎碎念。毕竟生活，如人饮水，冷暖自知，再美丽的照片也掩饰不了内心的蓝色。</p><p><strong>人生如逆旅，我亦是行人。</strong></p><p>以上。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;又到了年终小结的时候啦，彷佛又回到了高考考场上憋作文的时光，真是难熬呀！不过有一句话讲的挺好，未来的你一定是现在的你的忠实读者。为了不让未来的我没东西可读，还是努努力，向intel学习，挤点牙膏出来。&lt;/p&gt;
&lt;p&gt;前两年的总结都是以回忆录的形式，随意散漫。今年其实想从各个
      
    
    </summary>
    
      <category term="无趣随笔" scheme="http://behappy.cc/categories/%E6%97%A0%E8%B6%A3%E9%9A%8F%E7%AC%94/"/>
    
      <category term="年终总结" scheme="http://behappy.cc/categories/%E6%97%A0%E8%B6%A3%E9%9A%8F%E7%AC%94/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
    
  </entry>
  
  <entry>
    <title>日本求学之路</title>
    <link href="http://behappy.cc/2018/09/01/how-to-study-in-japan/"/>
    <id>http://behappy.cc/2018/09/01/how-to-study-in-japan/</id>
    <published>2018-09-01T02:23:59.000Z</published>
    <updated>2018-09-25T15:09:11.014Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章记录自己在日本的求学之路，顺便也写给有兴趣来日本读研的人。我会以我的切身经历来讲述日本的求学之路是怎样的，从两眼一抹黑到入学合格。</p><p>先记录一下自己申报的学校和结果吧，具体情况后面会细讲。没错，日本可以报很多学校，只要考试时间不冲突。</p><table><thead><tr><th style="text-align:left">报考的学校及专攻</th><th style="text-align:left">是否合格</th></tr></thead><tbody><tr><td style="text-align:left">早稻田大学基干理工cs</td><td style="text-align:left">合格</td></tr><tr><td style="text-align:left">京都大学系统情报系</td><td style="text-align:left">不合格</td></tr><tr><td style="text-align:left">东京大学复杂理工系</td><td style="text-align:left">笔试合格，面试不合</td></tr><tr><td style="text-align:left">筑波大学cs</td><td style="text-align:left">合格</td></tr></tbody></table><p>我觉得来日本之前可以先想想下面这些问题，下面给出我的回答。</p><p><strong>1. 为什么想来日本？</strong></p><blockquote><ol><li>不满足本科的学历，工作工资又低，但是想逃避考研激烈的竞争。 </li><li>感觉国内问题比较多，想出来看看资本主义有没有值得学习的地方。</li><li>去不起美国</li></ol></blockquote><p><strong>2. 我现在什么水平？</strong></p><blockquote><ol><li>学历背景： 不知名二本EE专业，GPA 3.7/5，没发表过文章没科研背景。</li><li>语言成绩: N2/114（哑巴日语）, TOEFL/94。</li></ol></blockquote><p><strong>3. 来日本留学想去哪些学校？</strong></p><blockquote><p>东京大学，京都大学，大阪大学，东京工业大学，早稻田大学。</p></blockquote><p>如果觉得自己目标明确，<strong>经济条件又支持</strong>，那可以考虑一下日本留学了。近几年说实话来日本读研的人越来越多了，比如来读cs的。因为大家都不傻，日本费用低，学校好申，所以学校考试的难度也越来越大了。</p><h1 id="1-概览"><a href="#1-概览" class="headerlink" title="1. 概览"></a>1. 概览</h1><p>先解释几个名词，日本真正的研究生叫<strong>修士</strong>，而研究生在这边的意思就是旁听生，是没有学位的，这点切记。然后本科和研究生院，这边分别叫<strong>学部</strong>和<strong>大学院</strong>。</p><p>在日本，你想当修士，就一定要经过一场考试，这是铁律，不像欧美国家直接申请就够了。但是考试的种类有很多，难度也不同，有的只要面试就行了。所以为了这个考试，需要有备考阶段。然后呢，跟国内一样，考试需要报名的，日本这边叫<strong>出願</strong>，当然日本这边报名很烦的，也需要拎出来好好讲。最后就是考试阶段了。所以这篇文章我会分为3个部分，分别为<strong>备考、出願、考试</strong>。</p><h1 id="2-备考"><a href="#2-备考" class="headerlink" title="2. 备考"></a>2. 备考</h1><h2 id="2-1-备考形式"><a href="#2-1-备考形式" class="headerlink" title="2.1 备考形式"></a>2.1 备考形式</h2><p>备考阶段可谓形式多样，主要有<strong>3</strong>种类型。</p><ol><li><p><strong>旅游签直接考</strong>。顾名思义呢，就是在国内备考报名，然后申请一个15天的旅游签证直接过来收割offer。我已经见过好几个大佬这样了。这条路一般是大佬和准备充分的人走的路，也是最节约时间的路。我见过的这样子做的大部分是来考cs的，因为在国内看看过去问，能做出个50%，然后再多复习复习就可以过来考了。这几年，这种方式越来越流行了，因为国内985大佬来日本留学的越来越多了，省钱省力谁都喜欢。当然还有一些国内考研失败的，也会以这种方式来留学。如果你对自己的专业知识够自信，那这种方式绝对是最好的。</p></li><li><p><strong>研究生</strong>。我上面说过，日本的研究生就是旁听生的意思，也就是说在教授的研究室备考研究，不过没有学位，要转正成为修士，还是要考试的。研究生的申请有很多说法，我在这边也不细讲，因为我没申请成功过。总之就是跟教授发信套近乎，教授喜欢你，那你就可以当研究生。研究生的好处就是费用比下面我要提的语言学校便宜，然后考试有加成，因为有前辈辅导加上面试不会被老师刷。缺点就是好大学的研究生比较难申请，需要一定的硬件实力，然后遇上性格古怪的教授会比较难受。</p></li><li><p><strong>语言学校</strong>。这是绝大部分走的路，因为门槛低，适用于没有语言基础以及申请不上研究生的。然后你要是考大学院，语言学校是没有专业课辅导的，需要自学或者报塾来辅导你。缺点就是费钱，学习氛围也很差吧。我是走的这条路，也是无奈之举，不过日语也的确提升了很多，对日本也有了些许了解，算有所收获。现在语言学校的申请都是几乎免中介费的，但是还有很多人要去给中介送钱，可能钱太多了吧。语言学校的推荐，就是跟你想考的学校一个城市就行，其他都无所谓，全靠自己。</p></li></ol><h2 id="2-2-备考书籍以及过去问"><a href="#2-2-备考书籍以及过去问" class="headerlink" title="2.2 备考书籍以及过去问"></a>2.2 备考书籍以及过去问</h2><p>这个其实要看完出願阶段才能讲。首先呢，每个学校每个研究科的考试时间、考试内容、考试形式都不一样，所以需要先确定考试学校和研究科，然后看过去问，确定考试范围，最后再买书复习。所以，<strong>学校 -&gt; 考试范围 -&gt; 书籍</strong>。</p><p>我是差不多考试前3个月开始复习的吧，其实还是懒了，如果要考东大京大这样的学校，还是要认真复习半年比较稳妥。比如东大京大要考数学，而早大只考专业课，所以要学习的范围很广，然后自己本科又不是计算机的，所以还是要花很多功夫的。我先列给出自己的复习用书吧，其实还有很多都是看的电子版恶补的，比如计算理论、离散数学、18.06的线代等等。</p><p><img src="/images/test-study-books.jpg" alt="备考实体书籍"></p><p>从下往上讲把，东大京大和筑波这些学校要考数学，而复习数学最快的方法就是一本考研全书了，日本也分为3块，<strong>微积分、线性代数和概率统计</strong>。当然中日的考试范围可能会略微有些差异，比如日本的线性代数还会考<strong>线性空间</strong>，所以需要看额外的书籍了，然后日版书籍也要买的，不然到时候题目和专业术语看不懂就很尴尬了。我这边买的不全，有些是看舍友的，有些是上报的塾的课学的。</p><p>然后就是国内计算机考研408的书籍了，这四本刷完也算入门计算机科学了。这些东西日文版的到没那么需要，我买的那两本都没看过。TCP/IP还是需要看看的，计算机网络我记得就早稻田和阪大会考。重点还是推荐<strong>坂井修一</strong>的书，真的是通俗易懂，不愧是东大大佬，图片上有两本，一本是数电（<code>論理回路</code>），一本是计算机系统的组成（<code>コンピューターアーキテクチャ</code>），都是会考的很实用的书，一般都会考数电的，简单而且覆盖的学校又多，一定要掌握。</p><p><strong>过去问一定要刷啊！过去问一定要刷啊！过去问一定要刷啊！</strong>只有刷了过去问才能了解出题的范围，然后比如京大的算法题，永远是考排序和页面置换算法，针对复习就行。</p><h1 id="3-出願"><a href="#3-出願" class="headerlink" title="3. 出願"></a>3. 出願</h1><p>日本这边考试的种类可多啦，大致分为以下几种。</p><blockquote><ol><li><strong>一般入试。</strong>这个就是日本的考研啦。</li><li><strong>外国人特别入试。</strong>一般就是给研究生啊这些考的，不过名额不多，而且有条件，每个大学还不一样，不过难度肯定比一般入试简单，有机会的同学可以试试这个。</li><li><strong>社会人入试。</strong>没错，工作了的人也可以考。</li><li><strong>英语项目sgu及其他。</strong>不了解，就不说了。</li></ol></blockquote><p>我这里就只讲一般入试了。一般入试分为夏入试和冬入试，时间分别为8月和2月。夏入试就是和日本人一起考，互相竞争，而冬入试只有外国人考，所以招的名额也比较少。一般入试竞争挺激烈的，因为你要和日本人正面刚，这些人可能就是东大京大本科生（<strong>东大京大没有保研制度</strong>）。其实考名校里面中国人很多的，在考场上可能1/3的人都是国人。全看考试成绩，残酷又刺激，一般能合格的都是大佬。其实很多时候，成功报名就已经刷掉很多人了，因为报名要注意很多东西，稍有不慎就出问题。我当初看着这么多东西头大的很，不过还是慢慢熬过来了。下面我会慢慢讲解如何出願。</p><h2 id="3-1-募集要项"><a href="#3-1-募集要项" class="headerlink" title="3.1 募集要项"></a>3.1 募集要项</h2><h3 id="3-1-1-纸质版募集要项"><a href="#3-1-1-纸质版募集要项" class="headerlink" title="3.1.1 纸质版募集要项"></a>3.1.1 纸质版募集要项</h3><p>从募集要项上，我们大致会了解到以下几个东西，<strong>招生人数、出願时间、出願材料、考试时间地点形式、合格通知</strong>，所以募集要项很重要。</p><p>首先，募集要项这个东西应该在每个学校的官网都有电子版，可以下载下来好好看。但是，出願的时候可是需要纸质版的募集要项的，因为有些材料必须使用学校给定的格式。所以有些学校是需要跟学校申请<strong>纸质版募集要项</strong>的，比如东大京大东工大这些学校，早大和筑波不需要。具体的做法呢，就是去便利店买一个角形2号信封，差不多比A4纸大一点那种。然后在封面写上学校的教务处地址，这个地址学校会给出的。然后里面要塞什么呢，要塞一个<strong>贴好邮票</strong>的2号信封，这个信封是学校寄募集要项给你用的，邮票要贴多少学校也会有指示。然后可能还要在里面添个表，申明自己需要哪个专攻的募集要项。记得在<strong>出願截止时间前</strong>申请就行了。</p><p>简单说一下流程吧。一般寄的话都要加急比较保险。<br><img src="/images/admission-procedure.jpg" alt="报名流程"></p><p><strong>并不是所有学校都有冬入试</strong>，这个需要自己去确认，我这边就讲一下夏入试的流程吧，以早稻田大学的大学院基幹理工学研究科的情報理工・情報通信専攻为例吧。这边提供一份2018年夏入试的募集要项，<strong><a href="/images/waseda_2018_cs_guide.pdf" title="早稻田2018cs募集要项">点此下载</a></strong>，以这份为例讲解一下如何出願，看看我们能得到哪些信息。</p><h3 id="3-1-2-招生人数"><a href="#3-1-2-招生人数" class="headerlink" title="3.1.2 招生人数"></a>3.1.2 招生人数</h3><p><img src="/images/waseda_planned_enrollment.jpg" alt="招生人数"><br>如图发现招生是140个人，这是总招生人数，包含了9月入学、4月入学、跳级考试以及保研的人。事实上，这个专攻的保研率在65%，这个消息在宣传册上可以看到。我记得当时考上的总考生是70个人，估计招35个左右吧。所以140个人里面，本校保研的人占了90个左右，还要加上一些其他考试收的人，真正招的其他学校的学生只有35个不到，还是有竞争的。</p><h3 id="3-1-3-出願时间"><a href="#3-1-3-出願时间" class="headerlink" title="3.1.3 出願时间"></a>3.1.3 出願时间</h3><p><img src="/images/waseda-admission-time.jpg" alt="出願时间"></p><p>这张图信息量挺大的，刚接触的人可能会比较难懂。首先第一行给的是<strong>考试报名费支付和报名的时间</strong>，没错在6月份，所以说考试前1，2个月就要报名，然后报名费要3W日元哦，真的超贵。报名方法就是你要把你的报名材料邮寄过去，日本这一点还是挺古老的，所有学校都要邮寄材料过去才能报名。然后呢，<strong>持参不可</strong>的意思是，不能你直接跑到早大把材料给他，一定要邮寄（汗）。<strong>消印有效</strong>的意思是你可以在6月11号的时候寄材料，而<strong>必着</strong>就是6月11号你的材料一定要到。感觉在国外报名的人时间真的挺赶的。不过教务处的人会尽量帮助你，遇到问题发邮件问教务处，总会有解决办法。</p><h3 id="3-1-4-出願材料"><a href="#3-1-4-出願材料" class="headerlink" title="3.1.4 出願材料"></a>3.1.4 出願材料</h3><p>出願材料还挺多的，我就不一一细讲了。比较重要的就是<strong>毕业证明、学位证明、成绩单</strong>和<strong>英语成绩</strong>。</p><p>其实这个在来日本之前，就应该开好。前面一类的证明书，不是你那张中文版的毕业证和学位证，而是要英文版的证明书，只要证明你毕业就行。这些在每个大学的教务处都可以开到。我个人的话，每个都要了10份，比较保险，其实感觉5，6份就差不多了。当然早大还提供一种别的认证机构的方式，详情就自己去研究吧。我觉得还是去大学教务处开最方便，不然只能拿着中文版的毕业证去公证处公证，费钱费时，而且一个学校就要一份，不返还，挺麻烦的。我一个同学当初就没有准备好这些东西，报名的时候被认为材料不合格，还好学校教务处给了点通融时间，联系国内学校又开了一份寄到日本来，往东京跑了3，4趟，真的超麻烦。所以说这些东西要早点准备好，很多人就因为这个没有报名成功。</p><p>英语成绩的话，除了东大和京大个别专攻只认托福，其余都开始认可托业了，我这边还是推荐考个托业的，简单啊，我裸考都865的，托福认真准备3个月才94。这边需要注意的是</p><blockquote><ol><li>有些学校只要原本，而且不返还，但是在国内考的托福的话，那张纸只有一张，交了就没了，在日本考可以申请很多份，所以推荐大家还是在日本考一个托业吧。</li><li>有些学校只认官方寄送，寄到日本给自己保留时间都要4个礼拜把，越早寄越好。</li><li>有些学校还有门槛的，要提前看清楚，比如早大托福57，或托业550，或雅思4.5才能报名。</li><li>有些学校可以考试当天带成绩单过去，给你留一些刷英语成绩的时间，还是挺贴心的。</li></ol></blockquote><h3 id="3-1-5-考试时间地点形式"><a href="#3-1-5-考试时间地点形式" class="headerlink" title="3.1.5 考试时间地点形式"></a>3.1.5 考试时间地点形式</h3><p><img src="/images/waseda-test-time.jpg" alt="考试时间"></p><p>由图可知，考试时间在7/7和7/8，7/7是笔试，7/8是面试。这边其实有两个地方需要说明一下。第一，早稻田是私立，考试时间比较早，像国公立这些学校都是8月份考试。所以早稻田要早报名，国公立比较晚在6月末7月初。第二个就是有些学校只有笔试合格了才有面试资格，有些学校是两个一起进行。不过以个人经验来说，笔试还是占大头的，面试相对来说没那么重要。</p><p>考试地点的话，在其他资料上有，这边就不说了，反正到时候去学校有引导，比较重要的是考试范围和过去问，这些资料在官网上也能找到，迫于我的博客空间有限，就不给大家上传了，就发个早大cs的考试范围图吧。</p><p><img src="/images/waseda-cs-test-range.jpg" alt="考试范围"></p><p>总共要考4题，全要做，150分钟时间，还是挺紧张的，考试范围也很广。我把考试科目换成中文，也就是编程、计算机数学、离散数学、计算机系统、计算机组成、数电、电路、模电和计算机网络。这样一看是不是贼恐怖。其实早大的题目就是这样，广但不深，了解过就能做，没了解过就难了。</p><p>然后面试要做ppt，自己带电脑发表10分钟，老师提问5分钟。</p><h3 id="3-1-6-合格发表"><a href="#3-1-6-合格发表" class="headerlink" title="3.1.6 合格发表"></a>3.1.6 合格发表</h3><p>每个学校都不一样，比如早大东大就只有邮寄或者要跑去学校看，其他学校会公布在网上。我觉得网上公布合格的考试号挺好的，不知道有些学校这么守旧干嘛，说是为了维持传统，有点无语。如果4月入学的话只会会收到合格通知书，但是10月入学还包括入学材料了。4月入学和10月入学也有说法，4月入学是日本主流节奏，就跟我们9月开学一样。4月入学的话方便毕业找工作，10月入学的一般都是外国人。</p><h2 id="3-2-联系教授"><a href="#3-2-联系教授" class="headerlink" title="3.2 联系教授"></a>3.2 联系教授</h2><p>如果要考试的话，直接发信给教授说你要考试就行，不用像申请研究生那样畏畏缩缩，教授一般会这样回，你来考吧，合格了就要你。如果5天没回信，你特别喜欢这个教授的话就再发一封，还是不回就换教授把。以下为我的模板。当然你也可以发英文的，英文格式比较随意。<br><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">XX大学大学院XX研究科</span><br><span class="line">XX先生</span><br><span class="line"></span><br><span class="line">お忙しい中、突然のご連絡、大変申し訳ございません。</span><br><span class="line">私は中国人留学生で、XX（片假名读音）と申します。</span><br><span class="line">XX年XX月にXX大学XX学部XX専攻を卒業し、10月に来日しました。</span><br><span class="line">今京都の日本語学校で日本語を勉強しています。</span><br><span class="line">詳細は添付ファイルをご覧下さい。(可以放一下你的CV之类)</span><br><span class="line">今年の夏のXX研究科XX専攻修士課程の試験を受けたいと考えています。</span><br><span class="line"></span><br><span class="line">私は大学で情報工学に関する「確率・統計」や「オブジェクト指向プログラミングC++」、「情報理論」などを履修しました。(大学学过的有关课程)</span><br><span class="line">大学卒業後、自分の専門知識がまだ不十分だと思い、より高水準の教育環境で研究したいと考え海外留学を決意しました。</span><br><span class="line"> </span><br><span class="line">また、私は大学時代、必要な知識を学習したほか、専門分野の研究も進めてきました。</span><br><span class="line">（这边讲一下你大学研究了啥）</span><br><span class="line">ですから、私はデータマイニングとデータ可視化にとても興味深いです。</span><br><span class="line"></span><br><span class="line">(最后表明你想在他实验室下研究的意欲）</span><br><span class="line">貴校のホームページを拝見し、先生のご専門が「大規模データ処理」などだと知り、ぜひ先生の下で研究したいと希望しております。また、私もクラウドソーシングに興味を持っております。先生の下で研究が可能であるかどうかご相談させていただきたく、メールをお送り致しました。何卒よろしくお願いします。</span><br><span class="line"></span><br><span class="line">姓名</span><br><span class="line">現住所：XXX</span><br><span class="line">電話：XXX</span><br><span class="line">E-mail：XXX</span><br></pre></td></tr></table></figure></p><h1 id="4-考试"><a href="#4-考试" class="headerlink" title="4. 考试"></a>4. 考试</h1><p>考试也不知道说什么，我就说说自己去考4个大学的过程吧。近几年竞争变激烈了，不仅仅是来日本留学的人多了，还有很多大佬占3，4个学校的名额，鸽了很多学校。我周围就有4，5个大佬，东大已经合格了，还去考京大和东工大，然后去碾压对手，拿到合格再鸽了。。。也不能说这样不好，只能说菜是原罪，提高自己吧。</p><h2 id="4-1-早稻田大学"><a href="#4-1-早稻田大学" class="headerlink" title="4.1 早稻田大学"></a>4.1 早稻田大学</h2><p>提前在池袋订好房间，然后提前一天坐夜行巴士过去，省点钱嘛。隔壁住了两个韩国小姐姐，日语英语都贼6。笔试的话，考的很偏，过去问的知识点基本都不考，所以做下来感觉写了75%，做对50%吧。第二天的面试，穿好西装去的。老师们分成几个组，比如一组3个老师左右，应该3个老师里面有你的第一志愿老师。面试的礼仪和问题我就后面统一讲一下。我做的英文ppt，准备用英文发表的。结果老师说不行，只能用日语讲，然后我就懵了，只能蹩脚的讲了，不过那时候挺自信的，也没有露出为难的表情，结束前，老师说你编程能力不错啊，当时还是很开心的，不过日语发表让我感觉还是没有底。这边有一个很神奇的事，我面试完坐新干线回京都的时候，虾米音乐给我推了一首歌《七月七日晴》，当时真的五味杂陈，好在合格了。</p><h2 id="4-2-京都大学"><a href="#4-2-京都大学" class="headerlink" title="4.2 京都大学"></a>4.2 京都大学</h2><p>招录比38/63。本来打算7/8面试完早稻田就好好准备京大，认真看数学的。但我没有想象的这么自律，真的无心学习，直到7/23拿到了合格通知书才终于安定下来。可是京大8/6就考了，当时就感觉考不上了。我数学前面都没复习过，所以微积分复习了5天，线代复习了7天，最后专业课复习了一个晚上。或许这很难相信，但我的确只看了这么点时间，其中还包括打游戏看剧的时间。不过结果还是说明了一切，准备不充分没合格。线代基本都做了，微积分一道题都没做出来，然后专业课排序题没做对，整体做出来50%，但是大佬太多了。也不知道排序题对了有没有机会。和教授的面试还是挺融洽的，教授还夸我日语有N1水平了。所以可以看出京大笔试是一切，一定要好好学习啊。在京大还遇到3个国人妹子，还是京大数学本科生，大佬真的无处不在啊。</p><h2 id="4-3-东京大学"><a href="#4-3-东京大学" class="headerlink" title="4.3 东京大学"></a>4.3 东京大学</h2><p>招录比34/121。东大这个我就是抱着当炮灰去的，即使是新领域研究科已经比较简单了。因为只考数学，而数学也正好是我薄弱的科目，所以没抱什么希望。上午考英语，下午专业课。微积分6问做了2问，线代和概率倒是差不多全做出来了。本来都准备回京都了，结果笔试居然合格了，还是挺意外的。面试合格了62个人，最终还要刷掉30多个，我这种笔试在及格线附近的只有靠面试才能挽回了。面试就是一上来问你，除了填的6个志愿，还愿意去哪个实验室呢，我就说只去机器学习和脑科学的。问我志愿动机，我作死的说因为题目比计算机科学简单。然后我的第一志愿老师问问题，他一个问题讲了要有5，6秒，我第一遍没听懂，第二遍还是没听懂。然后我就猜是想要研究的内容，然后猜错了，旁边的一个和蔼的教授说是做过什么先行研究。勉勉强强答完以后，老师貌似对我的回答不满意，没什么兴趣就不问了。人家都是5、6分钟，我3分钟就出来了，真的很难受。柏之叶校区环境还是挺好的。虽然没合，但是笔试能过我也很意外了。</p><h2 id="4-4-筑波大学"><a href="#4-4-筑波大学" class="headerlink" title="4.4 筑波大学"></a>4.4 筑波大学</h2><p>招录比80/130。这个学校有点东西的，联系教授申请考试都很难，貌似被中介塞满了，我和我好多同学给老师发信说想考试，结果要么说满了，要么就是不回信，我发了6，7个教授，我同学发了十几个教授都这样，这筑波的教授是真的高冷，我反正对筑波印象很不好。我报这个学校是为了防止我考不上早稻田没学上。考试的时候我还迟到了十几分钟，要知道考试时间总共一个半小时，万幸题比较简单，都做完了。面试的话我没准备，有些地方没讲清楚把。不过卷子全做对了，面试再怎么烂都能合格的。</p><h2 id="4-5-面试总结"><a href="#4-5-面试总结" class="headerlink" title="4.5 面试总结"></a>4.5 面试总结</h2><ol><li><p>穿西装表示尊重，不穿西装的都是本校大佬，一般面试时间6-10分钟吧。</p></li><li><p>敲门敲两下，听到<code>どうぞ</code>，进去。进去了以后鞠躬说<code>失礼します</code>。老师让你坐，说<code>ありがとうございます</code>。结束了说<code>ありがとうございました</code>，出门前鞠躬<code>失礼します</code>。</p></li><li><p>老师都会问的问题，志愿动机，大学做了什么先行研究，毕业论文相关，入学后的研究内容，日语水平，笔试考的怎么样这些。</p></li></ol><h1 id="5-私塾"><a href="#5-私塾" class="headerlink" title="5. 私塾"></a>5. 私塾</h1><p>私塾就是补习班的意思。因为如我上面所说，语言学校是不会教你专业课的，所以所有东西都要自学。我去过一些在日本比较大的私塾咨询过，他们的模式都是给你联系你要报考的专业的在校生来教你，然后按时计费。比如1小时1w日元这种，这1w日元里老师只能拿3k，剩下的全给中介了吧，这价格怎么不去抢！所以也有很多脑袋聪明的东大京大大佬自己出来招学生，一对一授课。</p><p>我报的塾就是一个京大在校生办的，他拉上几个京大大佬一起授课，感觉这种模式挺好的。我是第一届试带的学生,费用比中介便宜太多了，中介报个私塾没4wRMB下不来的。然后上课老师都是大佬，教数电和概率的就是这个组织人，教高数的是本科同济数学系的大佬，教线代的是京大笔试成绩第一而且修士研究内容为线代的大佬，教数据结构和算法的是ACM谷歌实习大佬。授课形式是直播，错过了看录播的视频，群里讨论问题。当然缺点还是有的，比如教的课程比较少，我考的早大需要学自动机，操作系统和计算机网络，这些都要自己学，据说第二期开始课程多了很多。其实个人感觉还不错，能认识到这些巨佬。</p><p>是否需要上私塾是因人而异的，但我个人对私塾的态度是肯定的。当然我不是说那些死贵的中介塾，比较推荐找那些学长学姐自己办的补习班。为什么推荐呢？其实表面上说，不就是备考出願么，感觉还挺简单的。但其实自己做起来，就发现无从下手，起码我当初是这样的。募集要项怎么找，考试范围有哪些，中文和日本教材买哪些，过去问的答案和谁讨论，出願具体流程细节怎么弄，面试的时候要注意什么。这些东西只有经历过的人才清楚，有时候可能一些小错误就失去了机会，比如出願晚了，材料不合格之类。其实私塾还有一个作用，就是督促自己学习。在语言学校，大家都在混都在玩，没什么动力学习的，只有和战友大佬多交流才能意识到自己的不足。所以拿出这1w，认识了各位大佬，早点考上了心仪的大学，免去在语言学校时间和金钱的浪费，感觉是一笔不错的投资吧。当然这些都是建立在普通人的视角上，大佬们都是自己开拓道路的。</p><h1 id="6-费用"><a href="#6-费用" class="headerlink" title="6. 费用"></a>6. 费用</h1><p>费用问题其实大家也挺关心的，我粗略算了一下，到现在总花费也有<strong>15w</strong>人民币了。</p><blockquote><ol><li>语言学校学费和住宿费 <code>132w日元</code></li><li>带过来的日元 <code>50w日元</code></li><li>报塾的费用 <code>1wRMB</code></li><li>信用卡消费，学校报名费啊，自行车网购这些 <code>29w日元</code></li><li>支付宝消费 <code>1w3RMB</code></li></ol></blockquote><h1 id="7-最后的废话"><a href="#7-最后的废话" class="headerlink" title="7. 最后的废话"></a>7. 最后的废话</h1><p>感谢你能看到这里，其实从去年10月来日本语言学校到现在有学上的一年时间里，中间经历了很多很多，有很多话想说，但到嘴边却说不出口，其实也没人会听你说，我们还是习惯于向众人展示光鲜亮丽的一面。然后也有点失落吧，我这辈子的最高学历应该就定形了，没能考上东大还是挺遗憾的。</p><p>最后还是决定去早稻田，看了一下本科的偏差值，发现早稻田基干理工是72，而筑波情报只有63，偏差值这东西反正越高越好。早稻田为什么这么高呢？查了一下资料发现，日本高中生只能报一所国公立，私立可以无限制的报，所以很多没考上东大京大的大佬最后都去了早庆。这样一想早稻田的大佬其实蛮多的，而且顶级企业肯定会来早稻田招人的，结果不言而喻。</p><p>最近又回味起酒神的人生观了，感觉挺对的。</p><p><code>在你没做出成绩之前，这个世界不会在乎你的自尊。一个人想要的东西不能太多，但我的一生，是抗争的一生。</code></p><p>周围都是大佬，我这个弟弟怎么能不努力呢？</p><p>以上。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这篇文章记录自己在日本的求学之路，顺便也写给有兴趣来日本读研的人。我会以我的切身经历来讲述日本的求学之路是怎样的，从两眼一抹黑到入学合格。&lt;/p&gt;
&lt;p&gt;先记录一下自己申报的学校和结果吧，具体情况后面会细讲。没错，日本可以报很多学校，只要考试时间不冲突。&lt;/p&gt;
&lt;tabl
      
    
    </summary>
    
      <category term="无趣随笔" scheme="http://behappy.cc/categories/%E6%97%A0%E8%B6%A3%E9%9A%8F%E7%AC%94/"/>
    
      <category term="日本生活" scheme="http://behappy.cc/categories/%E6%97%A0%E8%B6%A3%E9%9A%8F%E7%AC%94/%E6%97%A5%E6%9C%AC%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>在日半年</title>
    <link href="http://behappy.cc/2018/03/31/half-year-in-japan/"/>
    <id>http://behappy.cc/2018/03/31/half-year-in-japan/</id>
    <published>2018-03-31T07:44:00.000Z</published>
    <updated>2018-09-01T08:54:55.415Z</updated>
    
    <content type="html"><![CDATA[<p>不知不觉来日本已经半年了，时间过的也真是太快了。依然记得出发前为各种资料烦恼的样子，还有和新同学在机场候机的场景。半年多也没有写博客了，本来想过年的时候总结一下，终究还是因为各种原因被搁置了。最近是日本的樱花季，几乎天天出去转悠，有点看腻了，今天就在宿舍好好休息，回忆一下这半年吧。看看照片，看看便签，想到哪写到哪。</p><h1 id="1-厨艺"><a href="#1-厨艺" class="headerlink" title="1. 厨艺"></a>1. 厨艺</h1><p>刚来日本的时候，觉得这是一个提升自己厨艺的好机会。于是下了一个下厨房app，找几个喜欢的菜做做，非常有成就感哈哈。调料，食材，做菜工具这些都需要自己准备，还好这边没有菜市场，都是直接从超市买处理过的，不然光是菜市场的味道就会把我的热情全部浇灭。不过日本这边的酱油我感觉没有国内的鲜，下面放上几道做的菜。</p><p><img src="/images/japan-food.jpg" alt="自己做的菜"></p><p>总之全是肉哈哈，没肉是不可能没肉的，主要还是素菜太难做了。不过现在渐渐也不怎么下厨了，买菜的钱跟外面吃一顿差不多，做菜还需要很多时间。厨艺算稍稍有点长进吧。</p><h1 id="2-打工-アルバイト"><a href="#2-打工-アルバイト" class="headerlink" title="2. 打工(アルバイト)"></a>2. 打工(アルバイト)</h1><p>来日本之前就想着要找份工作赚点零花钱，我估计同学也都是这么想的，除了个别富家子弟哈哈。如果日语好的话，找份兼职是挺容易的，但对我这种日语渣渣就有点困难了。刚来日本前2个月的时候，脑子里完全没有找兼职的想法。那个时候只会几句简单的寒暄，连数字、日期什么的都数不过来。后来渐渐习惯了，想着找份可以锻炼日语的工作，正好大学舍友阿远所在的优衣库缺人，就让我去面试看看。要知道那时候阿远已经可以跟同事谈笑风生了，我还只是N5都勉强的水平，结局貌似已经注定了。不过我本来就对优衣库很有好感，而且这种工作也不像在餐厅后厨洗盘子一样很无聊，所以认真地准备了履歴書就去了。</p><p>这里还是很感谢吉川店長的，知道我日语不好，所以面试的时候，手脚并用给我解释。我记得第一个问题就把我问懵了，<strong>「張さん今どこで頑張っていますか」</strong>，我现在在哪努力？这是我第一次感受到日本人的委婉，应该是问我在哪学习或者工作吧。然后过了几天，阿远跟我说没通过，店長说都挺好的，只是日语有点弱，加上马上年末了，没有时间和精力带我。虽然知道几率很小，还是有点难受的，想着等下学期去别的优衣库分店面试看看。</p><p>然后1月下旬的时候，阿远正好要回国不干了，问我要不要再面试一次，我心想这次机会不能错过了。那时候《大家的日本语初级1》应该已经学完了，简单的对话基本没什么问题了。这次总算面试通过了，然后2月1号办入社手续，这里让我印象深刻的是，办理入社的时间也算在工时里，真是贴心啊。还有一个好玩的事，就是让我填姓和名的读音。我的<strong>名</strong>是<strong>Cheng</strong>，我的<strong>姓</strong>的日语罗马音是<strong>Chou(ちょう、張)</strong>。因为两个都是<strong>C</strong>开头的，所以店長就觉得我是不是写反了，觉得我的姓应该是<strong>Cheng</strong>，当时我解释了半天哈哈。</p><p>然后我没干几天，就说要换店長了，貌似优衣库就是干一段时间，换一家店这种。然后就要办店長送別会，我对吉川店長很感激，就决定参与了，感觉外国人参与他们的聚会应该是第一次哈哈。依然记得江口前辈拉着我一个一个猜名字的场景，太恐怖了，日本人的名字还是很难记的，有时候脸又对应不上。送别会后半段我就有点困了，很多东西听不懂，只能玩玩手机，偶尔问几个问题。不过总的来说还是很高兴，很好玩的。</p><p>然后因为要通勤，买了个bridgestone的公路自行车，看着很骚气哈哈。现在除了收银和補正没干过，其他基本的也差不多了解了。要知道每一个新的活，都是前辈们手把手教学的，因为日语比较差。在这里非常感谢前辈们，真的都很温柔。虽然等我考上大学院以后要离开，但这段记忆会永远铭记在心里的。</p><p><img src="/images/uniqlo.jpg" alt="优衣库伏見店"></p><h1 id="3-旅游"><a href="#3-旅游" class="headerlink" title="3. 旅游"></a>3. 旅游</h1><p>京都是一个很有名的旅游城市，但是其他方面感觉都一般。离我最近的就是稲荷神社啊，东福寺这些，很有名，不过感觉也没啥看头。日本两个大季节算比较火，一个是紅葉季，还有一个就是樱花季了。</p><h2 id="3-1-紅葉"><a href="#3-1-紅葉" class="headerlink" title="3.1 紅葉"></a>3.1 紅葉</h2><p>个人感觉琉璃光院比较好看。</p><p><img src="/images/momiji.jpg" alt="红叶1"></p><p><img src="/images/momiji2.jpg" alt="红叶2"></p><h2 id="3-2-桜"><a href="#3-2-桜" class="headerlink" title="3.2 桜"></a>3.2 桜</h2><p>这个地方就很多了，不过我现在很喜欢背割堤，因为那边可以野餐晒太阳。</p><p><img src="/images/sakura.jpg" alt="樱花"></p><h2 id="3-3-温泉"><a href="#3-3-温泉" class="headerlink" title="3.3 温泉"></a>3.3 温泉</h2><p>第一次泡温泉，跟着大佬奢侈了一把，日本最古老的温泉————有馬温泉。</p><p><img src="/images/arima-onsen.jpg" alt="温泉"></p><h1 id="4-学业"><a href="#4-学业" class="headerlink" title="4. 学业"></a>4. 学业</h1><p>果然进了语言学校，斗志渐渐被消磨了。感觉没了考托福时那种劲了，一直在浑浑噩噩。每天上午半天的课程，下午的时间玩玩游戏，发发呆就过去了，真的是太快了。我发现自己现在越来越会逃避了，喜欢用游戏来麻痹自己，喜欢在很偏的地方来获取成就，而忽略正面战场。比如考进大学院和学好日语才是我现在的主要任务，可能因为这个是个长期的计划，比较艰难，我就会转去别的领域寻找成就感，比如吃鸡，看剧，转笔之类吧。这应该是一种逃避行为，一种傻逼行为，暂时没有想到好的方法，应该只能直接正面主要任务。</p><p>感觉自己的日语的确是有进步的，毕竟每天学的东西不是很多，一直在对话使用，也和日本人经常沟通。感觉脑子里日语已经形成了一个体系，大概不会像以前自己学的时候，纯记单词那样，过一年就全忘了吧。就像很多单词，自己说过很多遍，也听过很多遍，已经形成反射了。果然语言这种东西不听不说是不行的，现在吃鸡上经常和日本小哥聊聊天，还是挺好玩的。</p><p>这边进大学院都是要自己看每个学校的要求，然后自己考虑买什么书，准备什么科目。而我不再像国内一样，对于情报搜索有自信了。很多东西搜出来看不懂（日语太差），国人的情报又比较少，导致我做了一个应该很长时间都不会甘心的决定，报了一个京都大学在校生的塾，花了8300RMB。报的时候，纠结了很久，有点难受。不过跟着直播学，是比自己学的轻松，提前准备好生词表，中日结合讲知识点，课后布置每个大学的真题作业，互相讨论什么的。舍友报了个20000多RMB的东大一对一教学，真的是太有钱了哈哈。</p><h1 id="5-琐碎小事-その他"><a href="#5-琐碎小事-その他" class="headerlink" title="5. 琐碎小事(その他)"></a>5. 琐碎小事(その他)</h1><ol><li><p>这边的交通费是真的很贵，随便出个门，1000多日元就没了。</p></li><li><p>日本的网吧里面有正版AV，哈哈哈，不过我上次去的那家连鼠标垫都没有。</p></li><li><p>日本的马桶被TOTO垄断了，喷水擦屁股，风干屁股真的有一种异样的束缚感。</p></li><li><p>元旦的时候买了个年末彩票，中了1w日元，运气真好。日本这边好像不会自己对有没有中奖，都是把买的直接给店主，放在类似点钞机的机器上一扫就知道中奖金额了。我记得刚出结果的时候，我看了下中了1w，然后过几天去兑奖的时候，店主一扫，看到1w，兴奋地一直说，「おめでとうございます！」，而我面无表情哈哈哈。</p></li><li><p>日本这边的景点有点坑，不是一个大门票，而是每个小景点都要分别收费，加起来也很贵了。而且主要是都是小院子，小景，很多时候没什么意思。</p></li><li><p>日本这边的有些电影是没有字幕的。刚来的时候被阿远骗去看电影，连日语字幕都没有，全程靠脑补。然后是真的很安静，有点不自在。</p></li><li><p>来了日本半年，从来没去过理发店，已经习惯自己动手了。记得一开始的时候，技术不是很成熟，把舍友剃的很丑，半夜跑出去买帽子哈哈。现在看了点视频，学会了怎么剃后面，把fade消除掉，视频地址<a href="https://www.youtube.com/watch?v=mBtay3_Ux7c&amp;list=PLbydO2PhdqQIW_5N0PyBVF9X1sr7ixjbv&amp;index=2" target="_blank" rel="noopener"><strong>在这</strong></a>。这是一个教人剃头的youtuber，感觉很实用。</p></li></ol><p>下面上一些说明的图。</p><p><img src="/images/japan-suosui.jpg" alt="琐碎图"></p><p>先记录到这吧。</p><p>じゃ、以上です。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;不知不觉来日本已经半年了，时间过的也真是太快了。依然记得出发前为各种资料烦恼的样子，还有和新同学在机场候机的场景。半年多也没有写博客了，本来想过年的时候总结一下，终究还是因为各种原因被搁置了。最近是日本的樱花季，几乎天天出去转悠，有点看腻了，今天就在宿舍好好休息，回忆一下这
      
    
    </summary>
    
      <category term="无趣随笔" scheme="http://behappy.cc/categories/%E6%97%A0%E8%B6%A3%E9%9A%8F%E7%AC%94/"/>
    
      <category term="日本生活" scheme="http://behappy.cc/categories/%E6%97%A0%E8%B6%A3%E9%9A%8F%E7%AC%94/%E6%97%A5%E6%9C%AC%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>六级466到托福首战94的心得总结</title>
    <link href="http://behappy.cc/2017/07/27/toefl-90-experience/"/>
    <id>http://behappy.cc/2017/07/27/toefl-90-experience/</id>
    <published>2017-07-26T23:13:26.000Z</published>
    <updated>2017-08-05T05:14:53.109Z</updated>
    
    <content type="html"><![CDATA[<p>刚刚查了成绩，94分，虽然不高，但是去日本留学是够用的了。</p><p><img src="/images/toefl-score.png" alt="toefl成绩"></p><p>从成绩表可以看出，我的阅读和作文比较高，听力和口语很差。其实大部分中国考生都是这样，因为听力和口语短期提分比较难，需要长时间的积累。所以我的经验对<strong>国人</strong>比较适用，<strong>想考90分套路就够了，想考100分还是需要实力的</strong>，因为<strong>听力</strong>不能拖后腿，具体的看下面。</p><h1 id="1-预期分数"><a href="#1-预期分数" class="headerlink" title="1. 预期分数"></a>1. 预期分数</h1><p>Toefl毕竟还是考试，任何考试都应该给自己一个<strong>预期分数</strong>。比如说我要留学日本，东大的最高难度就是90分（东大冬入试的toefl成绩以前规定必须90，这个是看知乎考上的前辈说的，不过现在我看官网没写这个硬性规定），那么我的预期目标就设定为90。其他同理，其实日本帝国大学80分以上就够了。那么接下来我就以90分作为参照，你们可以根据自己的预期目标调整。</p><h2 id="1-1-拆分"><a href="#1-1-拆分" class="headerlink" title="1.1 拆分"></a>1.1 拆分</h2><p>那么接下来就是将这个预期分数<strong>拆分到各个模块</strong>了，刚开始考的时候，我的预期目标是这样的：</p><table><thead><tr><th style="text-align:left">Reading</th><th style="text-align:left">Listening</th><th style="text-align:left">Speaking</th><th style="text-align:left">Writing</th><th style="text-align:left">Total</th></tr></thead><tbody><tr><td style="text-align:left">25</td><td style="text-align:left">25</td><td style="text-align:left">20</td><td style="text-align:left">20</td><td style="text-align:left">90</td></tr></tbody></table><h2 id="1-2-模拟"><a href="#1-2-模拟" class="headerlink" title="1.2 模拟"></a>1.2 模拟</h2><p>然后就是下一个tpo软件，也就是ETS官方的真题软件，我用的是<strong><a href="http://bbs.zhan.com/forum-41-1.html" target="_blank" rel="noopener">小站的tpo软件</a></strong>。这里有几点需要注意：</p><blockquote><ol><li>国内的所有tpo软件都是<strong>盗版</strong>的，因为ETS的这些题都是<strong>200一套</strong>的。</li><li>关于tpo上面的题目，这些题目不可能再考，也就是废题，但是它是最权威的废题，所以<strong>最具备价值</strong>。</li><li>小站的部分题目答案是错的。</li></ol></blockquote><p>总之就是先做阅读和听力，我忘记当初做多少分了，估计是阅读20的样子，听力10分的样子。所以最终的成绩可能是这样的，口语和写作先都算20，其实20分也是需要好好准备的。</p><table><thead><tr><th style="text-align:left">Reading</th><th style="text-align:left">Listening</th><th style="text-align:left">Speaking</th><th style="text-align:left">Writing</th><th style="text-align:left">Total</th></tr></thead><tbody><tr><td style="text-align:left">20</td><td style="text-align:left">10</td><td style="text-align:left">20</td><td style="text-align:left">20</td><td style="text-align:left">70</td></tr></tbody></table><h2 id="1-3-调整分数"><a href="#1-3-调整分数" class="headerlink" title="1.3 调整分数"></a>1.3 调整分数</h2><p>如果现在让我说，这4个项目短期内提分的难易度是这样的，难度从小到大：</p><blockquote><p>Reading &lt; Writing &lt; Listening &lt; Speaking</p></blockquote><p>有人可能会说了，Writing这么好提分么？我可以明确的回答，Writing提分很<strong>简单粗暴</strong>，而Listening和Speaking需要大量的积累和练习。我的前半部分备考时间集中在Listening上，提升很慢，真的很慢，只是从十几分稳定到了20左右。我的后半部分备考时间集中在Speaking和Writing上了，事实证明效果明显，Speaking从15分左右到20，Writing从20到27。而且这两部分认真准备时间2周多点。</p><p>所以我调整下来的<strong>预期分数</strong>是这样的：</p><table><thead><tr><th style="text-align:left">Reading</th><th style="text-align:left">Listening</th><th style="text-align:left">Speaking</th><th style="text-align:left">Writing</th><th style="text-align:left">Total</th></tr></thead><tbody><tr><td style="text-align:left">25</td><td style="text-align:left">20</td><td style="text-align:left">20</td><td style="text-align:left">25</td><td style="text-align:left">90</td></tr></tbody></table><p>Reading和Writing作为主要拿分点，Listening努力提高，运气好也可以多拿点分，Speaking只要在20分，也就是正常说话就行了。确定好目标后，我们再来谈各个单科的练习。所有我总结的资料都分享到<strong>百度网盘</strong>了，链接：<strong><a href="http://pan.baidu.com/s/1bURyNW" target="_blank" rel="noopener">http://pan.baidu.com/s/1bURyNW</a></strong> 。</p><h1 id="2-单词"><a href="#2-单词" class="headerlink" title="2. 单词"></a>2. 单词</h1><p>很惭愧，我没有系统正式地背单词，我<strong>非常推荐</strong>大家买个红宝书或者精简词汇认真背，因为我用的方法经过实践不是很好。</p><p>我无意间扫到了这个<a href="https://www.zhihu.com/question/27244993/answer/83030807" target="_blank" rel="noopener"><strong>知乎答案</strong></a>,基础跟我差不多，而且看视频的样子还不错，于是我决定尝试这个方法。所有的视频都可以在那个答案中下到，而且<strong>朗读女</strong>挺好用的，将文字转化为音频，在回宿舍或是休息的时候可以听，为听力做准备。然后视频比较慢，可以用<strong>potplayer</strong>调节播放速度，加快时间。</p><p>我大概花了15天时间看完了所有的视频，然后整理改错。最后整理出了<strong>一个excel表格，大概有5页</strong>，并把每一页都用朗读女转成音频，每天一页，边看边听。</p><p>其实，这里面的确<strong>涵盖了许多托福单词</strong>，但是也有很多我背了但<strong>几乎没碰到过</strong>的。然后每天一页需要<strong>花费的时间挺多</strong>的，所以导致后来我几乎不怎么看这个单词了。我现在考完看这5页单词，每一页都有很多单词不认识，我只记得练习中经常遇到的单词。当然这也怪我没有持之以恒地复习单词。</p><p>所以说单词方面我没什么心得，经常在练习中遇到不认识的单词，而我的策略就是<strong>第一遍，大概记住就行，如果第二遍再看到，一定要记住</strong>，因为这肯定是个常考词汇。</p><h1 id="3-阅读"><a href="#3-阅读" class="headerlink" title="3. 阅读"></a>3. 阅读</h1><p>这个我可以好好说说我的经验了。从我的练习记录和感觉来看，我觉得阅读要突破高分要分为<strong>3个阶段</strong>。<br><img src="/images/toefl-tpo-record.png" alt="toefl练习记录"></p><h2 id="3-1-熟悉题型期（瞎jb选）"><a href="#3-1-熟悉题型期（瞎jb选）" class="headerlink" title="3.1 熟悉题型期（瞎jb选）"></a>3.1 熟悉题型期（瞎jb选）</h2><p>就是跟随感觉选，这个时候对阅读还有<strong>恐惧</strong>，觉得阅读<strong>很难</strong>，<strong>文章很长</strong>，很多单词和关键句都<strong>看不懂</strong>。我相信大部分考生的初始阅读水平应该会在18左右，也就是<strong>看得懂一半，连蒙带猜</strong>。我觉得可以先不急，就这种状态做个<strong>5套</strong>，每天一套，大致了解下自己的真实水平。</p><p>在这个期间，你需要了解的有：</p><blockquote><ol><li>有哪些题型</li><li>60分钟能不能做完</li><li>能不能在规定的时间里把文章所有内容看完</li></ol></blockquote><h2 id="3-2-能力提升期（能看懂句子和文章）"><a href="#3-2-能力提升期（能看懂句子和文章）" class="headerlink" title="3.2 能力提升期（能看懂句子和文章）"></a>3.2 能力提升期（能看懂句子和文章）</h2><p>到这个阶段，基本了解一定的题型了，只是还是这边错错，那边错错。我觉得这个阶段最关键的问题就是<strong>题目里考的那句话你真的读懂了么？</strong> 在做到5套以后，你做完以后不仅要对答案，然后要分析错误的原因，错误原因大概有以下几个：</p><blockquote><ol><li>题目看不懂</li><li>题目没看清/看差了</li><li>关键句没看懂（单词不认识）</li><li>关键句没看懂（单词都认识）</li><li>关键句看懂了，但整段话不理解，不能掌握作者想表达的意思</li></ol></blockquote><p>第<strong>一个</strong>问题其实比较少，问法还是比较简单的。</p><p>第<strong>二个</strong>问题也可以克服，一般都是粗心引起的，尤其是让你选<strong>NOT</strong>的题目。</p><p>其实第<strong>三点</strong>问题还好，不大的，一句话除非那个单词是关键单词，否则根本不影响理解，所以只要背不认识的单词就行了。当然如果你说每句话一半单词不认识，那还是好好背单词把。</p><p>第<strong>四个</strong>问题是最可怕的，也是我瓶颈期遇到的问题，那时候tpo做了要有快20套了，但就是稳定在22分左右上不去。然后我就发现，很多选项选错了，其实就是因为我<strong>没有真正理解那句话或者那个段落的意思</strong>。需要注意的是，在一开始大家做题的时候，阅读能力没有提升上来，所以大家喜欢<strong>跳着做题</strong>。什么意思呢？就是只看和题目有关的部分。然后对那部分的话有个大概的印象，比如，因为刚刚修建了公路，使得贸易繁荣，然后人民的生活水平提高了。那跳着看的人可能只会了解到生活水平提高了这个信息点，因为前面的原因用了<strong>复杂的句式和单词</strong>，所以不愿意去花时间看这个原因。那这个时候真正应该做的，是停止练习，花时间去重新巩固自己的语法知识，比如看看我网盘里分享的长难句分析之类的，还可以看看这个<strong><a href="https://www.zhihu.com/question/24485886/answer/54300952" target="_blank" rel="noopener">知乎回答</a></strong>。不需要你多精通，只要心里大概有个了解，掌握基本的5个句型就够了，最重要的是要<strong>克服心里的恐惧</strong>。一定要真正的理解句子的意思，不能贪图快，了解了个模糊的意思，对做题目意义不大。</p><p>第<strong>五个</strong>问题的解决之道在于，bear in mind that <strong>如果想拿高分，你是必须要把全文都读一遍的</strong>。我以前也疑惑，做阅读需要通读全文嘛？貌似跳着看看有时候也能拿高分，但其实运气成分很大。我是说如果你要拿接近满分，必须要有一个通读全文的过程，无论你是一上来先把整篇文章先看一遍再做题（没试过也不推荐），还是一段一段地阅读。的确有些语句是冗余信息，但是有时候<strong>这些冗余信息会表达出作者的意图</strong>。同时，做多了经常出现这种情况，就是<strong>上一题的答案，其实就在这个题目所指向段落的下一段的开头</strong>。所以，想要拿高分，必须阅读全文，而且阅读全文对主旨题有很大好处。</p><p>有些人可能不懂阅读的做题步骤，我这边是这样做的，感觉比较合适：因为题目是从第一段到最后一段的，所以是顺序的。我会先把问题<strong>所在的段落全部看完</strong>，然后再看问题。这样有个好处，就是理解的比较深刻。可能前面3，4道题全部是问第一段的，那你把第一段看懂，这几道题基本都没问题了。然后看完每段后，拿只笔<strong>记录一下本段内容大概</strong>。这样到最后做主旨的时候，文章写了哪几个方面，都很清楚的。</p><h2 id="3-3-题型专攻期（攻克薄弱，巩固强项）"><a href="#3-3-题型专攻期（攻克薄弱，巩固强项）" class="headerlink" title="3.3 题型专攻期（攻克薄弱，巩固强项）"></a>3.3 题型专攻期（攻克薄弱，巩固强项）</h2><p>阅读题型大致有以下几种：</p><blockquote><ol><li>词汇</li><li>推断（绝大部分都是这个题型，我就不细分了）</li><li>概括（每段的主旨）</li><li>句子简化 （不多，改写句子）</li><li>选非（也就是选不对的）</li><li>位置（每篇文章倒数第二题）</li><li>主旨（每篇文章最后一题）</li></ol></blockquote><p>我的划分比较简单，在看我的理解之前，可以先看看<strong><a href="https://www.douban.com/note/345960563/" target="_blank" rel="noopener">这篇文章提供的技巧</a></strong>。有些还是蛮有道理的，比如说选项<strong>如果是比较级，绝大多数情况下都是错的</strong>。</p><h3 id="3-3-1-词汇题"><a href="#3-3-1-词汇题" class="headerlink" title="3.3.1 词汇题"></a>3.3.1 词汇题</h3><p>没什么好说的，网盘里有镇魂词汇，总结了tpo以及许多真题的阅读词汇题，如果都掌握了，基本没什么问题。这里的注意点是：<strong>除非是实在不认识了，否则千万不到带到原文里面去看看合适不合适，直接按照单词的表面意思选就行了</strong>。因为你放到阅读里，其实是说不通的，所以词汇题看选项就行，基本5秒时间就能做完。</p><h3 id="3-3-2-推断"><a href="#3-3-2-推断" class="headerlink" title="3.3.2 推断"></a>3.3.2 推断</h3><p>这题是阅读里数量最多的题目，包含什么目的题之类的。简而言之，就是某一句话或者一段话的作用是什么。这题是<strong>非常难的</strong>，因为你要看<strong>上下文</strong>，还要看<strong>主题句</strong>，并且跟出题者的<strong>思路要保持一致</strong>。就像我上面所说第二个时期的4，5两个问题，把这两个问题解决好了，推断题不难的。<strong>先看懂句子，然后根据上下文，甚至上下段来推断。</strong></p><h3 id="3-3-3-概括"><a href="#3-3-3-概括" class="headerlink" title="3.3.3 概括"></a>3.3.3 概括</h3><p>一般是概括段落大意，概括文章的比较少。不是很难，总之是先看<strong>题目</strong>，了解这篇文章在讲什么。然后主要看段落的第一句话，因为这一般是<strong>主题句</strong>。 其实后面写作写多了，就会发现，托福无论什么都是这个套路，主题句+支持句+例子。</p><h3 id="3-3-4-句子简化"><a href="#3-3-4-句子简化" class="headerlink" title="3.3.4 句子简化"></a>3.3.4 句子简化</h3><p>这题我以前碰到基本都不会对，因为我连要改写的句子都看不懂，所以第一要务是要<strong>看懂句子</strong>，然后就是从这个句子中了解作者写这句话的<strong>目的</strong>，这样有利于我们选正确的改写句子。然后接下来就是选了，我觉得这题使用排除法比较好，首先看被改写句子的<strong>逻辑词</strong>，比如although，but这些，如果原句有这层逻辑，但改写句没有，pass。然后就是看原句的<strong>主语</strong>，其实你题目做多了会发现，很多句子改写的选项主语都换了，这显然是错误的。我以前经常看这句话貌似差不多意思对了，但其实主语都换人了，怎么可能对呢？</p><h3 id="3-3-5-选非"><a href="#3-3-5-选非" class="headerlink" title="3.3.5 选非"></a>3.3.5 选非</h3><p>这题对刚开始来做的人是很难的，因为手忙脚乱的，是先看选项呢，还是先看段落内容呢？而且部分人选择只看一部分跟题目有关的，所以经常漏掉很多东西。事实上，只要有了正确的做题步骤，选非题不是很难。也就是我上面所说，看到题目指的段落，先把<strong>这个段落所有内容全部看完</strong>，然后再看<strong>题目</strong>，这时候再根据选项对应到文中，有时不用再回头看就可以选出来了。</p><h3 id="3-3-6-位置"><a href="#3-3-6-位置" class="headerlink" title="3.3.6 位置"></a>3.3.6 位置</h3><p>位置题我感觉不是很难，首先看懂句子，然后看<strong>逻辑关键词</strong>，比如although什么的，然后再看<strong>主语</strong>，比如it, they什么的。看看插入的地方前后有没有提到过之类的。</p><h3 id="3-3-6-主旨"><a href="#3-3-6-主旨" class="headerlink" title="3.3.6 主旨"></a>3.3.6 主旨</h3><p>这题是很难的，前期做的时候，我每次都选对2个，想要全对几乎不太可能。我以为是运气问题，直到后面吃透了题型才知道是做题的方法有问题。首先主旨题的正确做法是<strong>排除法</strong>，如果信息有错，直接pass。尽量选<strong>宏观的正确的</strong>选项，细节题如果是正确的先放着，看后面还有没有更好的，如果后面全是错的，那只能选细节题了，一般是不选细节题的。细节题就是那种文中只讲了一两句的，或者包括什么具体的名词啊比如地名这种，基本可以先放着看看其他宏观答案。</p><h2 id="3-4-阅读tips"><a href="#3-4-阅读tips" class="headerlink" title="3.4 阅读tips"></a>3.4 阅读tips</h2><blockquote><ol><li>不一定每次练都要限时，比如在<strong>第二个时期</strong>，也就是提升句子理解能力的时候，不限时，每次都把这句话，这个段落搞懂。如果不限时，可以拿到很高的分，那么接下来的问题就是提高阅读速度啦。</li><li>一定不能只练不总结，每道错题都要总结，然后每套还要总结，具体的可以看我网盘里的总结。</li><li>那个记录下每段在说什么的方法，大概练个5，6套左右，就可以不记录了，因为那时候大脑已经会自动记录筛选关键信息了，可以节约点时间。</li><li>尽量每篇时间都控制在18分钟左右，记住每篇的题目个数，1-14, 15-28, 29-42。我记得我后面练，快的时候一篇10分钟就完成了，词汇题最容易节省时间。我考试的时候还剩10多分钟检查，还检查出了一道题目。</li></ol></blockquote><h1 id="4-听力"><a href="#4-听力" class="headerlink" title="4. 听力"></a>4. 听力</h1><p>听力我没什么经验好总结的，我只能说短期提升很难。</p><p>一开始我听力特别特别差，所以拿<strong>马骏21天</strong>练习<strong>听写</strong>的，我的网盘里也可以下载。只是这个听写实在太耗时了，我每天的大半时间都花在了这上面，进步是的确有进步的，我能听懂听力的主要情节和态度，但是细节几乎还是听不出来。</p><p>然后群里面听力满分的大神说，<strong>跟读</strong>更好一些。我想一下也对，反正能听懂的本来就能听懂，听不懂的再怎么样也写不出来。这里推荐<strong><a href="http://toefl.kmf.com/listen/order" target="_blank" rel="noopener">考满分</a></strong>，他已经给你断好句子了，适合精听和跟读。练习的方法可以参照<strong><a href="https://www.zhihu.com/question/20407472/answer/83390431" target="_blank" rel="noopener">这个知乎回答</a></strong>。跟读可以提高语音语调，我现在说英语会情不自禁地一直升调降调，就是跟读的时候练习的。</p><p>然后就是张艳的听力背景词汇，除了一些特别复杂的乐器啊，什么的不用记，其他都是需要做到<strong>秒反应</strong>的。尤其要记住生物、地理、天文、地球科学、商业等学科的单词，我网盘里还有一个一句话记住9大行星的科普文，几乎包含了大部分天文单词，非常生动有趣。</p><p>总之，多听，多练，很难，但请努力。 我平常训练其实还有是22，23的，考试时，监考人员不专业，被干扰太多了。总之先把conversation正确率提上来，不过也挺难的，比如说rule of thumb, tell me about it，鬼知道它真正的意思是什么，考试遇到这种就很难了。</p><p><strong>听力满分大神推荐听<a href="https://ed.ted.com/" target="_blank" rel="noopener">TED-ED</a></strong>。</p><h1 id="5-口语"><a href="#5-口语" class="headerlink" title="5. 口语"></a>5. 口语</h1><p>一定要先看<strong>张涵的<em>《托福口语这本书就够了》</em></strong>，因为他当过tofel口语出题人，网盘里有这本书。</p><h2 id="5-1-独立口语"><a href="#5-1-独立口语" class="headerlink" title="5.1 独立口语"></a>5.1 独立口语</h2><p>我是先把黄金口语80题，重新自己写了一遍，因为模板几乎被用烂了。这里的自己写的意思是，<strong>用google搜索这个话题，看native speaker写的讨论和文章，然后找到合适的，改改抄抄</strong>。因为我自己的遣词造句水平我是知道的，而且还不地道，那么为什么不用别人的甚至专栏记者写的东西呢？比如my admire people，我写的Roger Federer，google随便一搜就全是文章了。<strong><a href="https://www.zhihu.com/question/20856333/answer/27551660" target="_blank" rel="noopener">这篇知乎回答</a></strong>讲的就非常有道理。这里我要说一句，准备的段子最好在<strong>85个字</strong>左右。我看到很多人都是100个字，我实测下来，100个字很难流畅匀速地讲完。所以宁愿注意语调，慢一点，<strong>少说一点也不要仓促讲完</strong>。事实上，讲完85个字已经不错了，我考试的时候咿咿呀呀，只讲了5句话左右，也拿到了fair。</p><p>把这80题背熟，例子背熟，我考试的时候写作的例子用的也是口语的，所以这些段子真的很好用，但前提是地道。 80题背完以后，可以搞口语真经，或者看网盘里的<strong>刘功勋的机经小册子</strong>。</p><p>临考前，可以看看网盘里的万能理由，因为有时候看到没练过的独立题，脑子会出现短路。</p><h2 id="5-2-综合口语"><a href="#5-2-综合口语" class="headerlink" title="5.2 综合口语"></a>5.2 综合口语</h2><p>当然了，综合口语其实我是总结了心得和模板的，具体的可以看网盘里的心得，综合口语的听力不难，而且最重要的是什么？你可以<strong>漏细节</strong>！如果你只要20-23的话，你完全只要说大体情节就够了！比如说第4题的听力部分，例子来不及记啊，我以前也想把所有的都记下来，但是很难。后来我发现，<strong>就算我把所有的细节都记下来，我有时间和能力全部说完么？显然不能啊！</strong>因为听力记得都是单词，你需要有能把单词组成句子的能力，你需要时间想。所以我后来就放弃了，我只说个主要的大概的，细节能讲最好，讲不到拉到，反正我只要20分。</p><p>综合口语还有一点就是有些人在<strong>准备回答的时间不知道干什么</strong>，我以前也有过这个疑问！后来我发现这个时间可以用来<strong>将单词连成句子，具体做法是在关键词前后写上主语啊，连接词啊这种</strong>，我不知道这对别人有没有效果，但对我来说意义非凡！因为我的大脑还不能够立即将单词连成句子，每次组句子的时候，我要思考时态、单复数什么的，经常会卡顿，所以这宝贵的时间连接单词是再好不过了。</p><p>总之，口语就是<strong>keep talking</strong>，我后面几天几乎每天说5-6小时。<strong>推荐看下寄托天下的绿神的帖子，是个妹子，而且口音很好听，还是满分。<a href="http://bbs.gter.net/forum.php?mod=viewthread&amp;tid=1715919&amp;extra=page%3D2%26filter%3Dauthor%26orderby%3Ddateline%26typeid%3D192%26typeid%3D192%26orderby%3Ddateline" target="_blank" rel="noopener">口语答疑</a>、<a href="http://bbs.gter.net/forum.php?mod=viewthread&amp;tid=1654484&amp;extra=page%3D1%26filter%3Dtypeid%26typeid%3D192%26typeid%3D192" target="_blank" rel="noopener">题目分析</a>、<a href="http://bbs.gter.net/forum.php?mod=viewthread&amp;tid=1654484&amp;extra=page%3D1%26filter%3Dtypeid%26typeid%3D192%26typeid%3D192" target="_blank" rel="noopener">tpo11-30个人录音</a></strong>。</p><h1 id="6-写作"><a href="#6-写作" class="headerlink" title="6. 写作"></a>6. 写作</h1><p>我前面说过，写作是容易提分的。为什么？写作套路太深了！</p><p>参考书我看了两本，一本是<strong>慎小嶷的<em>《十天突破新托福写作》</em></strong>，还有一本是<strong><em>《托福高分范文大全》</em></strong>，都可以在网盘里下载到。</p><p>慎小嶷的书里有用的章节有：单词章、句型章、开头结尾章、综合作文模板章。那个1180个词汇真的挺常用的，可惜我背不下来，也没有太灵活应用。句型我也记了很多，都是比较地道的句型。我在开头结尾章里面选用了一个家长式结尾，这个章节给人启发，教你怎么构思。综合作文模板我基本就是拿他的改一改的。</p><p>还有他的18个话题是这样记得，TM STREEC $。就我个人而言，非常不好记！我是根据单词的首字母记得，分成以下情况：</p><p>Health <strong>|</strong> Pressure<br>Mind Money <strong>|</strong> Right Responsibility <strong>|</strong> Competition Culture <strong>|</strong> Skill Socialization<br>Environment Enjoyment Efficiency Employment <strong>|</strong> Team Trust Tradition Tenacity</p><p>所以你只需要这样记：<br><strong>HP</strong>(只有一个单词的，记成惠普这种)<br><strong>MR.CS</strong>(有2个单词的，可以记成-计算机科学先生)<br><strong>ET</strong>(有4个单词的，当然是外星人啦)</p><p>托福高分范文是这样用的：每个领域找一篇，比如education、work之类，先看中文，翻译成英文，然后再对照原版，改一改，记下好的。这是<strong>非常有必要</strong>的！因为很多时候，脑子里有东西，但是遣词造句能力不行啊！口语也是，不能迅速地组织语句，所以这个一定要练！我练了10篇就掌握了主谓宾这种基本句型的熟练使用！</p><p>不了解题型的可以看看这个<strong><a href="https://www.zhihu.com/question/23483525" target="_blank" rel="noopener">知乎问题</a></strong>，排名前3的答案都非常非常有用！<strong>第一名告诉我们综合写作的模板该怎么写；第二名告诉我们写作字数越多越好；第三名告诉我们独立写作的模板该怎么写。</strong></p><p>我自己用的综合模板和独立模板都能在网盘里下到，而且我考完考试选的是不允许ETS参考我的答案，所以我的模板可能还可以继续用，也可以稍加修改。</p><h2 id="6-1-综合写作"><a href="#6-1-综合写作" class="headerlink" title="6.1 综合写作"></a>6.1 综合写作</h2><p>根据我的实战经验，在概括阅读的时候，用阅读原本的词汇没有任何问题。而且没有说阅读占的比例一定要少，还是那句话，字数越多越好。但是真正的得分点是<strong>精准复述听力原文</strong>，也就是是说，你能一字不拉地将lecture里的观点完全写到作文里，那综合写作就是满分。大家的经验和给的范文都是这样的。 所以综合写作只考<strong>听力</strong>和<strong>打字速度</strong>，考官完全不在意你用模板的。</p><h2 id="6-2-独立写作"><a href="#6-2-独立写作" class="headerlink" title="6.2 独立写作"></a>6.2 独立写作</h2><p>很多人说独立写作不能写模板，被发现了分数很低。但真正的意思是，一定要准备好自己的模板啊！打字一定要快啊！它要求你写300字，你写个500字以上，老师好意思不给你good？辛苦分还是要给的。所以独立写作也是可以准备模板的，不过就是逻辑模板吧，你们可以看我网盘里的模板。比如拿第二段举例：</p><p><strong>To begin with,（论点1）.That is because（支持句）such as/Specifically,（再具体一点）. For instance, （举出一个例子）. In contrast, if（采取了对立面）,（导致的结果）. Therefore,（再次强调本段论点）.</strong></p><p>就是将逻辑词或者连接词做好，而且可以看到我这段用了<strong>举例论证和反证</strong>。</p><p>一般人也就只能弄成这种逻辑模板，但是我更丧心病狂地在让步段弄了内容模板。一般写作的结构是5段，开头+论证1+论证2+让步+结尾。</p><p><strong>Nonetheless, a small number of individuals tend to believe that（反方观点）since（能被反驳的反方理由1）. But if we carefully analyze this issue from the different angle, we could find it fails to take all the related circumstances into consideration that（反驳）.You see, people tend to focus on the cases around them and overlook the importance of the whole random sample, typically because of the lack of visibility. This phenomenon is called selection bias which can lead to false conclusions in several different ways.</strong></p><p>看到没有，我的反驳观点是<strong>万能的</strong>，我管你的理由是什么，我就说你们是<strong>选择性偏差</strong>！我就说你们忽略了真相！因为考官是不能说我们的观点是错的，只能看我们的论证是否有力，所以一定要自信！我这里的名词selection bias可以说是非常高端而且通用了，概念论证把可以说，而且我的概念还是在维基百科上抄的。</p><p>一开始我几乎半天写不完一篇文章，有了模板以后轻松上500字！注意一定要看<strong>那个知乎回答的第3名的答案</strong>，我看了不下10遍，终于总结了自己的写法！就是那种一开始写，我就把开头结尾段全部写完，然后再快速打一个让步段，字数已经300多了，时间还有18分钟左右，你说爽不爽！而且我的论证段也没有复杂句型和高级词汇，全程主谓宾，people…, they…，但只要没错误，例子合理，考官肯定会给辛苦分的！</p><p>综上，写作的高分要诀：</p><blockquote><ol><li>字数越多越好</li><li>拼写错误、语法错误越少越好</li><li>例子和论证一定要有力</li><li>最后要留3分钟左右的时间检查错误，别拼命打字了。</li></ol></blockquote><h1 id="7-考试流程概述"><a href="#7-考试流程概述" class="headerlink" title="7. 考试流程概述"></a>7. 考试流程概述</h1><p>托福查询考位需要先充钱才行，然后报完名，最好把考点、时间之类的信息截图发到手机里。然后到规定的时间，只要带<strong>身份证、水、吃的</strong>去就行了。比如说规定8点半到，那么8点钟就会开始放人进去，进去要签字，放包等，还要写一个不把考题泄露的承诺书。理论上9点之前都能进去。</p><p>太早进去也没事，因为还是要等到8点半才开始考啊，建议先在外面解决完一切问题再进去。然后就就是测试耳机啦，麦克风测试就一直重复<strong>describe the city you live in</strong>就行了，不用真的讲！</p><p>做完阅读和听力，中场可以休息10分钟，去喝水或者上厕所。关于做快点还是做慢点，还是有争论的，做快点的话，听力不会被人影响到。做慢点的话，中场休息回座位可以听到别人在讲口语啦，是能猜测出题目的，这时候可以直接在草稿纸上准备啦！</p><p>然后做完口语写作就可以回家了,真够累的！</p><p><img src="/images/toefl-man.jpg" alt="托福小黑哥"></p><h1 id="8-加试和机经"><a href="#8-加试和机经" class="headerlink" title="8. 加试和机经"></a>8. 加试和机经</h1><p><strong>加试</strong>是什么意思呢？就是因为每次考试的难度可能不一样，ETS为了平衡每次考试考生的成绩，再额外给你多加一套。比如阅读加试就是4篇文章，80分钟；听力加试就是3套了。我考前看了很多资料，加上考试经验，结论是这样的。以前加试90%都是听力加试，而且加试内容是一样的，都是大王花，ID卡这种，详细可以看我网盘的经典听力加试。加试是怎么用的，这点没有定论，有人说加试不算分，有人说根据加试微调。但是因为以前都是经典听力加试，所以大家都知道它就是加试了，而且答案都背住了。</p><p>而2017年4月份，托福<strong>改革</strong>了，几乎再也碰不到经典听力加试，而且开始有阅读加试了，而且题目也变成了很多套，ETS是真的狠啊！所以考前花了5分钟看一下经典听力加试内容就行了，而且也别抱希望能考到。</p><p><strong>机经</strong>这个东西是更加<strong>无用</strong>的，可能以前还有点用，自托福改革后，一套卷子大部分是新题，几乎不可能命中。我觉得机经就看看<strong>阅读词汇</strong>的押题把，这个的确可能会中，可以去小站下载，其他的口语写作题目都不靠谱！还是实力说话，背题目真的是没有用！</p><h1 id="9-送分和纸质成绩单"><a href="#9-送分和纸质成绩单" class="headerlink" title="9. 送分和纸质成绩单"></a>9. 送分和纸质成绩单</h1><p>关于免费填的4个学校，我觉得<strong>一定要填</strong>。首先，要是以后再加送是要钱的，然后就是如果寄多次成绩到学校，一般都是可以选最高成绩的。不过免费送分以后，口语和作文不可复议了，而且再取消免费送分也有点麻烦。</p><p>Toefl的成绩单分为两个，一个是<strong>official score reports</strong>，也就是送给学校的；另一个是<strong>examinee score reports</strong>，也就是送给个人的成绩单。official的成绩单可以加送很多，一份<strong>$20</strong>，现在大概￥134。但是examinee的成绩单，<strong>国内是只有一份的</strong>，不能加送，但是国外注册考试的，是可以加送的，这点我跟客服确认过，这里还是要表扬一下客服，每次打都有人接，貌似不是很忙，为啥网站就一直挂。国内是在NEEA上注册的，国外是直接在ETS官网注册的，虽然你登录NEEA发现账户上有个ETS ID，但其实根本登不上ETS官网，不知道有什么卵用。然后关于送examinee到个人手里，是<strong>直接送到你注册的时候填的地址的</strong>，一般大概一个月左右，可能会在官网显示快递号。我看网上说还要去考点领，或者考完要在考点留信息交邮费等，这些都是已经过时的消息了。</p><p>对了，关于送分时候写的机构代码，还有一点需要注意。比如东大的机构代码是9259，但是情报理工科的代码是8445。有的学校的系必须要你写<strong>准确的系的机构代码</strong>，如果只写学校的机构代码的话，系里会无法接收到你的托福成绩，比如，情报理工系就在官网要求一定要写8445。Department code一般写99就行，就是暂时空着的意思。</p><h1 id="10-总结"><a href="#10-总结" class="headerlink" title="10. 总结"></a>10. 总结</h1><p>准备了4个月，酱油2个月，认真2个月。其实到后面复习的时候真的是挺绝望的，天天呆在家里脱产学习，然而听力根本提不上来，独立口语每次一模拟就咿咿呀呀，写作也是没有好观点和例子。然后就会想，不过还要再考，1800的报名费，考位还都满了等等。一般这个时候，我会上知乎或者贴吧看看别人考托福的经历，比如有人考了13次才和托福分手，有人考了5次也没上80之类，还有各种好玩的事情，比如<strong>destroy the city you live in</strong>等等。</p><p>总之，不要放弃，练习再练习，给自己一个合理的预期分数！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;刚刚查了成绩，94分，虽然不高，但是去日本留学是够用的了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/toefl-score.png&quot; alt=&quot;toefl成绩&quot;&gt;&lt;/p&gt;
&lt;p&gt;从成绩表可以看出，我的阅读和作文比较高，听力和口语很差。其实大部分中国考生都是这样，因
      
    
    </summary>
    
      <category term="应试心得" scheme="http://behappy.cc/categories/%E5%BA%94%E8%AF%95%E5%BF%83%E5%BE%97/"/>
    
    
  </entry>
  
  <entry>
    <title>毕业设计——基于Ruff的简单物联网</title>
    <link href="http://behappy.cc/2017/07/22/Ruff-graduation-project/"/>
    <id>http://behappy.cc/2017/07/22/Ruff-graduation-project/</id>
    <published>2017-07-22T01:07:48.000Z</published>
    <updated>2017-07-22T05:14:59.434Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-背景"><a href="#1-背景" class="headerlink" title="1. 背景"></a>1. 背景</h1><h2 id="1-1-为什么用Ruff"><a href="#1-1-为什么用Ruff" class="headerlink" title="1.1 为什么用Ruff"></a>1.1 为什么用Ruff</h2><p>这次介绍我的毕业设计，这是个非常简单的东西。所有的源码在<strong><a href="https://github.com/HeroadZ/Ruff-graduation-project" target="_blank" rel="noopener">Github</a></strong>上，还包含了配置信息。</p><p>因为接触了好长时间的前端，然后本身是EE专业，就是搞单片机这种东西嘛，所以对js能否搞硬件一直保有期待。正好快毕业了，老师呢，也说让我自主选题。于是在网上搜索好久，先是舍友推荐了<strong>ESP8266</strong>。这是一块自带wifi的板子，毫无疑问，对于长期只能玩51板子的我有巨大吸引力！都能上网了还有什么不能干！然后又是一顿搜索，找到了集成度更高的<strong><a href="http://www.nodemcu.com/index_cn.html" target="_blank" rel="noopener">nodemcu</a></strong>，哇，这货就是我心中想要的。Nodejs编写网络应用，然后Lua操作硬件，可惜的是学习Lua也要一定的成本，不过这个很便宜，可以说是非常好的物联网开发板了。</p><p>然而我还是找到了<strong><a href="https://ruff.io/zh-cn/" target="_blank" rel="noopener">Ruff</a></strong>。这是一家专业的公司，有着成熟的开发方式和套件。底层SDK给你了，规范的常用的硬件模块给你了，甚至连软件封装都给你封装好了，你只需要有想法就行，剩下的几行代码足以。而且还有戴尔售后般的服务，缺点就是比较贵，板子加上官方硬件模块需要<strong>300</strong>块，不过老师可以报销，加上老师也挺感兴趣的，最终就决定拿Ruff来开发啦。</p><h2 id="1-2-Ruff的开发方式"><a href="#1-2-Ruff的开发方式" class="headerlink" title="1.2 Ruff的开发方式"></a>1.2 Ruff的开发方式</h2><p>我们看一下Ruff的开发方式。</p><p><img src="/images/Ruff-turnOn-led.png" alt="Ruff之helloworld"></p><p>真的，这种开发方式看到不心动不是人了！当板子初始化好以后，也就是ready以后，给button绑定一个侦听事件，如果按下，灯就点亮。这完全就跟网络端的前端开发方式一摸一样！传统前端也是灯页面加载好以后运行js代码的，也是基于事件驱动型的。而且这个还是JQuery语法，写起来倍儿爽！</p><p><strong>汇编</strong>是这样的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ORG 0000H  ;从最开始处执行</span><br><span class="line">clr P1.4           ;开led灯总使能</span><br><span class="line">mov P0,#11111101B  ;修改这里,不同的发光管会亮,8个2进制位代表8个灯,0为亮,1为灭</span><br><span class="line">sjmp $             ;死循环,目的是让程序一直停留在这里</span><br><span class="line">end</span><br></pre></td></tr></table></figure></p><p>是不是很烦，而且是从给引脚赋值，真的是蛋疼啊，完全没有阅读性可言。</p><p><strong>C语言</strong>是这样的：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sbit  led1=P1^<span class="number">0</span>;</span><br></pre></td></tr></table></figure></p><p>前面的一堆引入就不放进去了，同样是对引脚操作，东西一多，代码看起来真费劲。</p><p>所以看到js的开发方式，的确很感动。我很欣赏Ruff创始人的观点：</p><blockquote><p>嵌入式开发门槛太高，很大的原因在于抽象层次做的不够。就算用JavaScript语言去开发嵌入式端，<strong>如果还是对pin脚，对GPIO操作一个变频来达到目标，那么就还是用原始的方法在做开发</strong>。如今的应用开发，要么就是不需要写代码，要么就是能凭着自己的想法下意识地构思出代码。所以说，语言并不是最重要的，重要的是对<strong>硬件的抽象</strong>。</p></blockquote><h1 id="2-开发"><a href="#2-开发" class="headerlink" title="2. 开发"></a>2. 开发</h1><h2 id="2-1-我想要做什么？"><a href="#2-1-我想要做什么？" class="headerlink" title="2.1 我想要做什么？"></a>2.1 我想要做什么？</h2><p>首先我要明白，我想做什么，比如说最简单的，拿手机远程控制Ruff开发板，来点亮Ruff上的一盏灯。那么我要解决的问题是——<strong>手机如何与Ruff开发板通信</strong>？</p><p>其实分为两个部分，第一个手机端需要有个发送信息的程序，Ruff端需要有个接收信息并处理的程序。这样一看就是很简单的<strong>C/S（客户端/服务器）</strong>模式，Ruff开发板就是服务器，手机就是客户端。由于我们的命令可能就是一个true或false，不需要实时，所以用最简单的get请求就可以了，连post都不需要。所以大致流程如下，不清楚的可以去恶补一下计算机网络知识：</p><p><img src="/images/Ruff-CS-model.png" alt="Ruff通信之C/S模型"></p><p>那么其实这里就默认客户端需要知道服务器端的ip地址，其实这里Ruff提供了两种连接方式。第一种方式是<strong>AP模式</strong>，也就是手机直接连接到Ruff开发板的wifi中，没错，Ruff也是自带wifi的。还有一种是<strong>局域网模式</strong>，也就是手机和Ruff开发板都连接到一个局域网环境下（比如路由器等）。</p><p><strong>AP模式</strong>的好处是，这种情况下，Ruff开发板的ip相对于手机是<strong>固定不变</strong>的，为<code>192.168.78.1</code>。只是Ruff的网不是特别稳定，而且手机连上了Ruff的网，不能连接到外网。不过现在Ruff出来了一个<strong>内网渗透模式</strong>，也就是只要Ruff连接到外网，并开启这个模式，手机也能上网了。</p><p><strong>局域网模式</strong>的好处是，两者互不干扰，而且路由器相对稳定些。只是这时候Ruff开发板相对于手机的<strong>ip地址会变</strong>，因为每次Ruff连上局域网，可能会给它分配一个新ip。但是可以用<strong>绑定MAC地址</strong>的方式，使得Ruff开发板的ip固定不变。</p><p>由于我没有路由器，所以暂时用AP模式进行测试，注意每次开启Ruff的初始化时间比较长，而且Ruff连接到外网以后，会断掉wifi，过一段时间再重新开启。</p><h2 id="2-2-客户端程序"><a href="#2-2-客户端程序" class="headerlink" title="2.2 客户端程序"></a>2.2 客户端程序</h2><p>然后可以开始写手机端的程序了，怎么搞？一开始还想着搞个React Native，写个原生APP把，后来看了官方文档，放弃了。本来就不会React，还要懂各种安卓开发技巧。于是最终就简单写了个移动端页面。flex布局+jQuery就行了，图标用iconfont的。</p><p>下面放上我毕业设计的最终图，由于Ruff开发板答辩完以后被收走了，我也懒得再重新写页面了。</p><p><img src="/images/Ruff-phone.png" alt="Ruff手机端主页面"></p><p>如上所示，我最上面有3个功能模块，放后面讲，然后中间的ip修改是方便局域网时，可以修改发送地址的。其实就是把ip地址放在<strong><a href="https://developer.mozilla.org/en/docs/Web/API/Window/localStorage" target="_blank" rel="noopener">localStorage</a></strong>里面，每个页面都可以共享，然后有需要就改掉。注意这里需要<strong>正则验证</strong>一下输入，用<code>/^([0-9]{1,3}\.){3}[0-9]{1,3}$/.test(ipInput.val())</code>就可以了。然后下面的修改颜色模块，其实就是我所说的点亮一盏灯的功能了。因为这边用的是RGB三色灯，是基于PWM波。根据简单的三原色原理，我们直到<strong>当R,G,B都是255的时候，就是白光；R,G,B都是0的时候，就灭掉</strong>。</p><p>然后修改页面的代码大致如下，使用ES6写的，不过就语法变了下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$.get(localStorage.getItem(<span class="string">'ruffUrl'</span>) </span><br><span class="line"> + <span class="string">'colorChange?color='</span> </span><br><span class="line"> + <span class="built_in">encodeURIComponent</span>(colorCode), (data, status) =&gt; &#123;</span><br><span class="line"> <span class="keyword">if</span>(status === <span class="string">'success'</span>) &#123;</span><br><span class="line"> <span class="keyword">if</span>(data.colorChange === <span class="literal">true</span>) &#123;</span><br><span class="line"> <span class="built_in">window</span>.alert(<span class="string">"修改成功！"</span>);</span><br><span class="line"> &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"> <span class="built_in">window</span>.alert(<span class="string">"修改失败!"</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"> <span class="built_in">window</span>.alert(<span class="string">"修改失败!"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>可以看到，我们把颜色参数添加到了链接后面，注意这边需要编码，因为<code>#</code>是特殊字符。所以最后这个网址可能是这样的，6318是监听的端口号：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.78.1:6318/colorChange?color=%23ffffff</span><br></pre></td></tr></table></figure></p><h2 id="2-3-服务器端程序"><a href="#2-3-服务器端程序" class="headerlink" title="2.3 服务器端程序"></a>2.3 服务器端程序</h2><p>那么现在客户端可以发送请求了，服务器端必须监听这个请求并做出相应的处理。幸运地是，Node.js有相应的http库，但是所有的发送，接收，监听，回掉都要自己慢慢写，而Ruff替我们封装了一个库<strong><a href="https://github.com/vilic/ruff-home" target="_blank" rel="noopener">home</a></strong>，我们可以很简单地处理请求，但是需要注意的是，为了解决跨域问题，我们需要在response的header上加上允许跨域。所以最终的部分代码可能是这样的：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Server = <span class="built_in">require</span>(<span class="string">'home'</span>).Server;</span><br><span class="line"><span class="keyword">var</span> server = <span class="keyword">new</span> Server();</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">server.listen(<span class="number">6318</span>); <span class="comment">//监听端口</span></span><br><span class="line">server.get(<span class="string">'/colorChange'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    res.setHeader(<span class="string">'Access-Control-Allow-Origin'</span>, <span class="string">'*'</span>); <span class="comment">//允许跨域</span></span><br><span class="line">    <span class="keyword">var</span> urlObj = url.parse(req.url);</span><br><span class="line">    <span class="keyword">var</span> queryObj = queryString.parse(urlObj.query);</span><br><span class="line">    <span class="keyword">var</span> color = queryObj.color.toLowerCase();  <span class="comment">//颜色参数</span></span><br><span class="line">    <span class="keyword">var</span> sColorChange = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="number">7</span>; i += <span class="number">2</span>) &#123;</span><br><span class="line">        sColorChange.push(<span class="built_in">parseInt</span>(<span class="string">"0x"</span> + color.slice(i, i + <span class="number">2</span>))); <span class="comment">//转换成特定格式</span></span><br><span class="line">    &#125;</span><br><span class="line">    led.setRGB(sColorChange); <span class="comment">//设置颜色</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'color Change: '</span> + color);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        colorChange: <span class="literal">true</span> <span class="comment">//返回数据以便客户端确认</span></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="3-其他功能"><a href="#3-其他功能" class="headerlink" title="3. 其他功能"></a>3. 其他功能</h1><h2 id="3-1-自适应灯光"><a href="#3-1-自适应灯光" class="headerlink" title="3.1 自适应灯光"></a>3.1 自适应灯光</h2><p>说白了就是led灯的亮度根据当前环境亮度（通过光照传感器获得）作出改变。需要注意的是，这里有个难点，因为led灯是RGB标准的，而无法直观改变亮暗度。所以我采用了<strong><a href="https://zh.wikipedia.org/wiki/HSL%E5%92%8CHSV%E8%89%B2%E5%BD%A9%E7%A9%BA%E9%97%B4" target="_blank" rel="noopener">HSL标准</a></strong>，这里L表示亮度，然后色彩只保存在H和S里。至于这个转换的代码，直接从<strong><a href="https://stackoverflow.com/questions/2353211/hsl-to-rgb-color-conversion" target="_blank" rel="noopener">stackoverflow</a></strong>上复制了，虽说也不难，但省事。</p><h2 id="3-2-夜间睡眠模式"><a href="#3-2-夜间睡眠模式" class="headerlink" title="3.2 夜间睡眠模式"></a>3.2 夜间睡眠模式</h2><p>也就是，到了晚上（光照传感器确定），睡觉的人起床（声音传感器听到声音），led灯渐渐变亮。这里的难点是js的回掉太多了，简直回掉深渊，各种绑定取消。其实也没这么烦的，但是我想做一个类似按键防抖的功能，因为有时候会有比如说人经过会遮挡光照传感器等特殊情况。还好有人设计了<strong>promise</strong>这个东东，简单又使用。<strong>张鑫旭</strong>写了<a href="http://www.zhangxinxu.com/wordpress/2014/02/es6-javascript-promise-%E6%84%9F%E6%80%A7%E8%AE%A4%E7%9F%A5/" target="_blank" rel="noopener">一篇文章</a>来介绍这个概念，Ruff官方也封装了<a href="https://github.com/vilic/ruff-promise" target="_blank" rel="noopener">一个专门的库</a>来供我们使用。</p><p>所以一个简单的确认到晚上的功能是这样的：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> nightFlag = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> getIlluminancePromise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve</span>) </span>&#123; <span class="comment">//建立Promise对象</span></span><br><span class="line">    lightSensor.getIlluminance(<span class="function"><span class="keyword">function</span> (<span class="params">error, value</span>) </span>&#123;</span><br><span class="line">        resolve(value);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">getIlluminancePromise</span><br><span class="line">    .then(<span class="function"><span class="keyword">function</span> (<span class="params">illuminance</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (illuminance &lt;= nightLightValue) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nightFlag) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    lightSensor.getIlluminance(<span class="function"><span class="keyword">function</span> (<span class="params">error, value</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span> (value &lt;= nightLightValue) &#123;</span><br><span class="line">                            <span class="built_in">console</span>.log(<span class="string">'night confirm after 3s.'</span>); <span class="comment">//确认晚上</span></span><br><span class="line">                            nightFlag = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">                            soundSensor.enable(); <span class="comment">//打开声音传感器</span></span><br><span class="line">                            soundSensor.once(<span class="string">'sound'</span>, sleepLight.ledTurnOn);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;, <span class="number">3000</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            nightFlag = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure></p><p>不过声音传感器的防抖因为设计原因，我暂时还没什么好想法。</p><h2 id="3-3-监控模式"><a href="#3-3-监控模式" class="headerlink" title="3.3 监控模式"></a>3.3 监控模式</h2><p>In a nutshell，就是人体红外传感器检测到人，向微信发送消息。这里的难点是Ruff开发板向微信发送消息，我这里借用了<strong><a href="http://sc.ftqq.com" target="_blank" rel="noopener">Server酱</a></strong>。也就是说我在这里绑定我的微信，得到一个key，然后我带着这个key发送get请求给Server酱，她会自动将消息转发给我的微信，详细地可以看官方说明。</p><h1 id="4-总结"><a href="#4-总结" class="headerlink" title="4. 总结"></a>4. 总结</h1><p>最后的实物图：<br><img src="/images/Ruff-hardware.jpg" alt="Ruff实物图"></p><p>连接图：<br><img src="/images/Ruff-connection.png" alt="Ruff连接图"></p><p>需要注意的是：</p><blockquote><ol><li>LCD必须接<strong>5V</strong>的VCC</li><li>连接图可以自己调，改到舒服的端口</li><li>插线很烦，最后插完不要拔了</li></ol></blockquote><p>其实还挺有趣的，我没有用到Ruff的测试环境，没有自己写驱动包，因为没有用其他模块，尝试了下ES6和webpack，最近了解到写sass可以用csscombine来调节顺序什么的。所有的东西我只学了个皮毛，所以做出来的东西也只能是皮毛。不过毕业设计能做自己感兴趣的东西还是挺好玩的。</p><p>以上。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-背景&quot;&gt;&lt;a href=&quot;#1-背景&quot; class=&quot;headerlink&quot; title=&quot;1. 背景&quot;&gt;&lt;/a&gt;1. 背景&lt;/h1&gt;&lt;h2 id=&quot;1-1-为什么用Ruff&quot;&gt;&lt;a href=&quot;#1-1-为什么用Ruff&quot; class=&quot;headerlink
      
    
    </summary>
    
      <category term="技术分享" scheme="http://behappy.cc/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>2016总结与展望</title>
    <link href="http://behappy.cc/2017/01/26/2016-final/"/>
    <id>http://behappy.cc/2017/01/26/2016-final/</id>
    <published>2017-01-26T13:49:37.000Z</published>
    <updated>2018-12-15T04:43:46.952Z</updated>
    
    <content type="html"><![CDATA[<h1 id="谨记"><a href="#谨记" class="headerlink" title="谨记"></a>谨记</h1><p>以后如果遇到比较重要的事，一定要记录在便签里，或者拍照，不然年度总结根本写不了啊！</p><h1 id="2016大事记"><a href="#2016大事记" class="headerlink" title="2016大事记"></a>2016大事记</h1><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">拔了两颗智齿</span><br><span class="line">拿到了驾照 </span><br><span class="line">在熊猫tv上直播并写了自己第一个开源爬虫项目</span><br><span class="line">拿到了日语N2能力考等级证书</span><br><span class="line">完成了第一次实习，职位是前端开发工程师</span><br><span class="line">从学校搬出来住到了公司宿舍</span><br><span class="line">年度总收入突破5位数</span><br><span class="line">向公司提交辞职申请</span><br></pre></td></tr></table></figure><h1 id="技术"><a href="#技术" class="headerlink" title="技术"></a>技术</h1><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">勉强合格的前端初级工程师</span><br><span class="line">熟悉了jQuery及其生态圈</span><br><span class="line">切页面熟练不少</span><br><span class="line">尝试了解了许多热门工具和框架，比如gulp,Angular,webpack,es6等等</span><br><span class="line">刷了几道leetcode的简单算法题</span><br><span class="line">整体来说提升没有质的变化</span><br></pre></td></tr></table></figure><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">跑跑卡丁车技术有点提升</span><br><span class="line">第一次在steam上买游戏，并通关，home behind</span><br><span class="line">腹肌没了，体重略微增加</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;谨记&quot;&gt;&lt;a href=&quot;#谨记&quot; class=&quot;headerlink&quot; title=&quot;谨记&quot;&gt;&lt;/a&gt;谨记&lt;/h1&gt;&lt;p&gt;以后如果遇到比较重要的事，一定要记录在便签里，或者拍照，不然年度总结根本写不了啊！&lt;/p&gt;
&lt;h1 id=&quot;2016大事记&quot;&gt;&lt;a href
      
    
    </summary>
    
      <category term="无趣随笔" scheme="http://behappy.cc/categories/%E6%97%A0%E8%B6%A3%E9%9A%8F%E7%AC%94/"/>
    
      <category term="年终总结" scheme="http://behappy.cc/categories/%E6%97%A0%E8%B6%A3%E9%9A%8F%E7%AC%94/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
    
  </entry>
  
  <entry>
    <title>pandaTV竹子Top20教程</title>
    <link href="http://behappy.cc/2016/08/09/python-panda-rank/"/>
    <id>http://behappy.cc/2016/08/09/python-panda-rank/</id>
    <published>2016-08-09T01:44:44.000Z</published>
    <updated>2017-07-22T05:17:49.207Z</updated>
    
    <content type="html"><![CDATA[<p>这次我会带来一个pandaTV竹子Top20的教程，从零开始。</p><h1 id="1-背景交代"><a href="#1-背景交代" class="headerlink" title="1. 背景交代"></a>1. 背景交代</h1><h2 id="1-1-工具和环境："><a href="#1-1-工具和环境：" class="headerlink" title="1.1 工具和环境："></a>1.1 工具和环境：</h2><blockquote><ol><li>python库：requests、pymongo等</li><li>开发环境：python3.5、windows10</li><li>数据库：mongodb</li><li>数据可视化工具echarts.js</li><li>抓包分析工具fiddler</li><li>一个虚拟主机或者github pages</li></ol></blockquote><h2 id="1-2-教程整体思路："><a href="#1-2-教程整体思路：" class="headerlink" title="1.2 教程整体思路："></a>1.2 教程整体思路：</h2><blockquote><ol><li>首先我们要抓取数据（主播id和竹子数），那么我们就要抓包分析。</li><li>当我们知道从哪里可以获取数据后，就要写爬虫。写爬虫的时候要考虑以下问题，比如并发，增量等。</li><li>当我们抓取到所需数据时，我们需要保存数据，我们使用了数据库（其实是杀鸡用牛刀了）。</li><li>现在我们要根据需求来提取分析数据了，然后返回我们需要的数据。</li><li>得到所需数据后，我们要展示这些数据，要使用一些数据可视化工具。</li><li>写好展示页面后，我们要将它部署到网站上去，会讲到一些方法。</li></ol></blockquote><h1 id="2-教程正文"><a href="#2-教程正文" class="headerlink" title="2. 教程正文"></a>2. 教程正文</h1><h2 id="2-1-抓包分析"><a href="#2-1-抓包分析" class="headerlink" title="2.1 抓包分析"></a>2.1 抓包分析</h2><p>我们先分析一下需求，我们希望得到的数据：</p><blockquote><ol><li>因为pandaTV房间号是不固定的，我们要先获取热门直播里面的前20个主播的房间号。</li><li>得到房间号以后，我们要得到每个房间号里的主播id和竹子数量。</li></ol></blockquote><p>如果不想抓包分析，那可以直接使用selenium，但是selenium是万不得已才会用的，我第一次写的版本就是selenium版的，运行速度很慢。因为它的原理就是模拟人控制浏览器，要一个一个点开网页。  </p><h3 id="2-1-1-网页抓包"><a href="#2-1-1-网页抓包" class="headerlink" title="2.1.1 网页抓包"></a>2.1.1 网页抓包</h3><p>那么我们接下来开始抓包分析，pandaTV使用了ajax，我们使用开发者工具来抓包分析一下。放上<a href="https://developer.chrome.com/devtools" target="_blank" rel="noopener">chrome开发者工具教程</a></p><p>我们打开F12，点到Network标签，把preserve log钩打上，下面的选择XHR，开始抓包分析。我们先输入网址 <a href="http://www.panda.tv，然后点全部，然后随便选个房间进去，此处以我的房间为例。" target="_blank" rel="noopener">www.panda.tv，然后点全部，然后随便选个房间进去，此处以我的房间为例。</a></p><p><img src="/images/panda-F12.jpg" alt="pandaTV抓包"><br>这里我直接给出需要的地址，即第4步的地址，其他的地址暂时不需要。那么网址格式大概<br><code><br>    “<a href="http://www.panda.tv/api_room_v2?roomid=&quot;" target="_blank" rel="noopener">http://www.panda.tv/api_room_v2?roomid=&quot;</a> + 房间号<br>    比如 <a href="http://www.panda.tv/api_room_v2?roomid=473005" target="_blank" rel="noopener">http://www.panda.tv/api_room_v2?roomid=473005</a><br></code><br>我们直接访问这个网址，得到json格式的数据，里面有我们需要的主播id和竹子数。</p><h3 id="2-1-2-fiddler抓包"><a href="#2-1-2-fiddler抓包" class="headerlink" title="2.1.2 fiddler抓包"></a>2.1.2 fiddler抓包</h3><p>那我们得到了输入房间号返回数据的地址，接下来我们要获取热门直播的地址，那网页版是无法获取的，我们需要抓取Android客户端的api，这里用到的工具是fiddler，给出<a href="http://www.trinea.cn/android/android-network-sniffer/" target="_blank" rel="noopener">fiddler教程</a></p><p>为了节省时间，我直接给出我们需要的地址。pageno是页数，pagenum是每页多少人，同样得到json格式数据。<br><code><br>    <a href="http://api.m.panda.tv/ajax_live_lists?pageno=1&amp;pagenum=20&amp;status=2&amp;order=person_num" target="_blank" rel="noopener">http://api.m.panda.tv/ajax_live_lists?pageno=1&amp;pagenum=20&amp;status=2&amp;order=person_num</a><br></code></p><p>还有一个Github上的非官方API，也挺不错的。<a href="https://github.com/MatteO-Matic/pandatvAPI" target="_blank" rel="noopener">pandatvAPI</a></p><h2 id="2-2-写爬虫"><a href="#2-2-写爬虫" class="headerlink" title="2.2 写爬虫"></a>2.2 写爬虫</h2><h3 id="2-2-1-房间号列表"><a href="#2-2-1-房间号列表" class="headerlink" title="2.2.1 房间号列表"></a>2.2.1 房间号列表</h3><p>我们根据Android客户端抓取到的url获取房间号列表<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment">#得到推荐前20的房间号</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getTop20List</span><span class="params">()</span>:</span></span><br><span class="line">top20List = []</span><br><span class="line">url = <span class="string">"http://api.m.panda.tv/ajax_live_lists?pageno=1&amp;pagenum=20&amp;status=2&amp;order=person_num"</span></span><br><span class="line">info  = ((requests.get(url)).json())[<span class="string">"data"</span>][<span class="string">"items"</span>]</span><br><span class="line">[top20List.append(data_id[<span class="string">"id"</span>]) <span class="keyword">for</span> data_id <span class="keyword">in</span> info]</span><br><span class="line"><span class="keyword">return</span> top20List</span><br></pre></td></tr></table></figure></p><p>那么我们再分析一下，因为这是当前的热门直播前20，主播的作息时间是不固定的，所以我们涵盖不了所有的主播。那么我们要实现增量抓取，即每次爬取的房间号要保存下来，这样反复几次，可以涵盖几乎所有的热门主播。这里我们使用pickle，这是一个很方便的库，方便的保存读取房间号列表，然后实现增量。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle, os.path</span><br><span class="line"></span><br><span class="line"><span class="comment">#记录爬取的房间号</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">recordRoomList</span><span class="params">(roomNumberList)</span>:</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'roomList.pickle'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">pickle.dump(roomNumberList, f)</span><br><span class="line"></span><br><span class="line"><span class="comment">#读取文件中的房间号</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">readRoomList</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'roomList.pickle'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">  roomNumberList = pickle.load(f)</span><br><span class="line"><span class="keyword">return</span> roomNumberList</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#增量判断</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">incrementRoom</span><span class="params">(roomNumberList)</span>:</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">not</span> os.path.isfile(<span class="string">"roomList.pickle"</span>)):</span><br><span class="line">recordRoomList(roomNumberList)</span><br><span class="line"><span class="keyword">return</span> roomNumberList</span><br><span class="line">existRoomList = readRoomList()</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> roomNumberList:</span><br><span class="line"><span class="keyword">if</span>(item <span class="keyword">in</span> existRoomList):</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">existRoomList.append(item)</span><br><span class="line">recordRoomList(existRoomList)</span><br><span class="line"><span class="keyword">return</span> existRoomList</span><br></pre></td></tr></table></figure></p><h3 id="2-2-2-获取主播id和竹子数"><a href="#2-2-2-获取主播id和竹子数" class="headerlink" title="2.2.2 获取主播id和竹子数"></a>2.2.2 获取主播id和竹子数</h3><p>现在我们得到了房间号列表，根据我们抓包分析得到的地址，一个一个地请求。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment">#得到该房间的主播id和竹子</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getBambooAndName</span><span class="params">(roomNumberList)</span>:</span></span><br><span class="line">roomInfoList = []</span><br><span class="line">prefix = <span class="string">"http://www.panda.tv/api_room_v2?roomid="</span></span><br><span class="line"><span class="keyword">for</span> u <span class="keyword">in</span> roomNumberList:</span><br><span class="line">singleRoom = []</span><br><span class="line">singleRoom.append(u)</span><br><span class="line">info = (requests.get(prefix + str(u))).json()</span><br><span class="line"><span class="keyword">if</span>(info):</span><br><span class="line">print(info[<span class="string">'data'</span>][<span class="string">'hostinfo'</span>][<span class="string">'name'</span>])</span><br><span class="line">singleRoom.append(info[<span class="string">'data'</span>][<span class="string">'hostinfo'</span>][<span class="string">'name'</span>])</span><br><span class="line">singleRoom.append(round(int(info[<span class="string">'data'</span>][<span class="string">'hostinfo'</span>][<span class="string">'bamboos'</span>])/<span class="number">1e6</span>, <span class="number">2</span>))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">singleRoom.append([<span class="string">"none"</span>, <span class="string">"none"</span>])</span><br><span class="line">print(<span class="string">"not get"</span>)</span><br><span class="line">roomInfoList.append(singleRoom)</span><br><span class="line"><span class="keyword">return</span> roomInfoList</span><br></pre></td></tr></table></figure></p><p>请注意，此处我并没有简单地用两个list，而是使用了list in list的形式。why？这是因为为了后面的数据库而设计的。我这里的形式是[[room1],[room2],…]</p><h2 id="2-3-存储到数据库Mongodb"><a href="#2-3-存储到数据库Mongodb" class="headerlink" title="2.3 存储到数据库Mongodb"></a>2.3 存储到数据库Mongodb</h2><p>首先需要安装mongodb数据库，然后我们语言是python，所以使用pymongo库。<br><a href="http://api.mongodb.com/python/current/tutorial.html" target="_blank" rel="noopener">pymongo教程</a></p><p>我们要以字典形式存储进数据库，而且要先设计好数据库，我的设计如下。<br><img src="/images/mongodb_structure.jpg" alt="mongodb框架设计"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pymongo <span class="keyword">import</span> MongoClient</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取字典形式</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getDict</span><span class="params">(roomInfoList)</span>:</span></span><br><span class="line">roomInfoDict = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> roomInfoList:</span><br><span class="line">singleRoom = &#123;<span class="string">"name"</span>: item[<span class="number">1</span>], <span class="string">"bamboos"</span>: item[<span class="number">2</span>], <span class="string">"date"</span>: datetime.utcnow()&#125;</span><br><span class="line">roomInfoDict[<span class="string">"room"</span> + str(item[<span class="number">0</span>])] = singleRoom</span><br><span class="line"><span class="keyword">return</span> roomInfoDict</span><br><span class="line"></span><br><span class="line"><span class="comment">#存储到mongodb</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">saveToMongo</span><span class="params">(roomInfoDict)</span>:</span></span><br><span class="line">client = MongoClient()</span><br><span class="line">db = client.pandaTV</span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> roomInfoDict.items():</span><br><span class="line">collection = db[k]</span><br><span class="line">collection.insert(v)</span><br><span class="line">client.close()</span><br></pre></td></tr></table></figure><p>最终存储进mongodb的数据是这样的，我们给每个post都加了一个：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt; show collections</span><br><span class="line">room10003</span><br><span class="line">room10009</span><br><span class="line">room100130</span><br><span class="line">room10015</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&gt; db.room7000.find()</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"57a2f91deccca320542a9e64"</span>), <span class="string">"bamboos"</span> : 21.4, <span class="string">"date"</span> : ISODate(<span class="string">"2016-08-04T08:13:16.973Z"</span>), <span class="string">"name"</span> : <span class="string">"LPL熊猫TV官方直播"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"57a2ff93eccca31b38213ac1"</span>), <span class="string">"name"</span> : <span class="string">"LPL熊猫TV官方直播"</span>, <span class="string">"date"</span> : ISODate(<span class="string">"2016-08-04T08:40:51.872Z"</span>), <span class="string">"bamboos"</span> : 21.4 &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"57a45105eccca305c45cb33a"</span>), <span class="string">"bamboos"</span> : 21.64, <span class="string">"name"</span> : <span class="string">"LPL熊猫TV官方直播"</span>, <span class="string">"date"</span> : ISODate(<span class="string">"2016-08-05T08:40:37.707Z"</span>) &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"57a5c283eccca30f6c94b0a0"</span>), <span class="string">"bamboos"</span> : 22.04, <span class="string">"name"</span> : <span class="string">"LPL熊猫TV官方直播"</span>, <span class="string">"date"</span> : ISODate(<span class="string">"2016-08-06T10:57:07.491Z"</span>) &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>这里要注意有个坑，需要先安装mongodb数据库，在运行爬虫之前，需要先开启数据库。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mongod</span><br></pre></td></tr></table></figure></p><h2 id="2-4-提取分析数据"><a href="#2-4-提取分析数据" class="headerlink" title="2.4 提取分析数据"></a>2.4 提取分析数据</h2><p>关于这部分比较简单，大致就是读取数据库，按照时间戳来排序，得到最新的数据，然后返回Top20的一个Dict。特别需要注意的是，因为python的dict类型是无序的，所以即使你是排好序逐一添加，最后的Dict也是无序的。那么又因为我的Dict结构要方便数据可视化工具echarts.js读取，所以我设计成这样：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Dict = &#123;</span><br><span class="line"><span class="string">"name"</span>: [<span class="string">'xx'</span>, <span class="string">'xx'</span>, ...]</span><br><span class="line"><span class="string">"bamboos"</span>: [xx, xx, ...]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我直接把有序的列表作为values，这样就可以不关注Dict的坑了。还有就是要两个列表组合排序的问题，我使用了zip和sorted。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pymongo <span class="keyword">import</span> MongoClient</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">writeJsonFile</span><span class="params">(data,filename)</span>:</span></span><br><span class="line"><span class="keyword">with</span> open(filename+<span class="string">".json"</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">  json.dump(data, f)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get20Rank</span><span class="params">(db)</span>:</span></span><br><span class="line">bamboosList = []</span><br><span class="line">nameList = []</span><br><span class="line">rankDict = &#123;&#125;</span><br><span class="line">mycollections = db.collection_names()</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> mycollections:</span><br><span class="line">latest = db[item].find().sort(<span class="string">'date'</span>,<span class="number">-1</span>)[<span class="number">0</span>]</span><br><span class="line">bamboosList.append(latest[<span class="string">"bamboos"</span>])</span><br><span class="line">nameList.append(latest[<span class="string">"name"</span>])</span><br><span class="line">bamboosList, nameList = zip(*sorted(zip(bamboosList, nameList), reverse=<span class="keyword">True</span>))</span><br><span class="line">rankDict[<span class="string">"name"</span>] = nameList[<span class="number">0</span>:<span class="number">19</span>]</span><br><span class="line">rankDict[<span class="string">"bamboos"</span>] = bamboosList[<span class="number">0</span>:<span class="number">19</span>]</span><br><span class="line">writeJsonFile(rankDict, <span class="string">"bamboos_rank"</span>)</span><br></pre></td></tr></table></figure></p><p>这样我们得到了包含数据的json文件。</p><h2 id="2-5-数据可视化"><a href="#2-5-数据可视化" class="headerlink" title="2.5 数据可视化"></a>2.5 数据可视化</h2><h3 id="2-5-1-echarts-js"><a href="#2-5-1-echarts-js" class="headerlink" title="2.5.1 echarts.js"></a>2.5.1 echarts.js</h3><p>关于数据可视化的选择有很多，web方面有highchart、echarts、d3之类。因为看中文爽，还是用了echarts。<br><a href="http://echarts.baidu.com/" target="_blank" rel="noopener">echarts官网</a><br>我们需要异步加载数据，<a href="http://echarts.baidu.com/tutorial.html#%E5%BC%82%E6%AD%A5%E6%95%B0%E6%8D%AE%E5%8A%A0%E8%BD%BD%E5%92%8C%E6%9B%B4%E6%96%B0" target="_blank" rel="noopener">异步加载实例</a></p><p>这边还有个坑，就是因为x轴的数据太密集，会导致显示不全，解决办法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">xAxis: [</span><br><span class="line">    axisLabel: &#123;</span><br><span class="line">       interval: <span class="number">0</span>,</span><br><span class="line">       rotate: <span class="number">340</span></span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="2-5-2-移动端简单支持"><a href="#2-5-2-移动端简单支持" class="headerlink" title="2.5.2 移动端简单支持"></a>2.5.2 移动端简单支持</h3><p>我使用了viewport来稍微支持了下移动端，即判断innerWidth的大小（显示屏）来设置参数。当屏幕宽度大于500px时，横向排版；小于500px时，纵向排版。</p><h2 id="2-6-部署到网站"><a href="#2-6-部署到网站" class="headerlink" title="2.6 部署到网站"></a>2.6 部署到网站</h2><p>我们在调试echarts的时候，会遇到一个坑，即不能跨域，因为我们是读取本地json文件的。我安装了一个xampp来调试，比较方便。</p><p>因为我有一个配置好的虚拟主机，所以直接将json文件和html页面放上去就可以看到了。如果只是一个单纯的服务器，需要自己搭建服务器。或者放到github pages上也可以。</p><h1 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h1><p>放上Github地址： <a href="https://github.com/HeroadZ/panda-bamboos-rank" target="_blank" rel="noopener">panda-bamboos-rank</a><br>展示地址： <a href="http://behappy.cc/extension/panda/rank.html">http://behappy.cc/extension/panda/rank.html</a></p><p>以上。</p><p>2016/8/9</p><p>&nbsp;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这次我会带来一个pandaTV竹子Top20的教程，从零开始。&lt;/p&gt;
&lt;h1 id=&quot;1-背景交代&quot;&gt;&lt;a href=&quot;#1-背景交代&quot; class=&quot;headerlink&quot; title=&quot;1. 背景交代&quot;&gt;&lt;/a&gt;1. 背景交代&lt;/h1&gt;&lt;h2 id=&quot;1-1-工具和环
      
    
    </summary>
    
      <category term="技术分享" scheme="http://behappy.cc/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>从wordpress迁移到hexo</title>
    <link href="http://behappy.cc/2016/03/04/migrate-hexo/"/>
    <id>http://behappy.cc/2016/03/04/migrate-hexo/</id>
    <published>2016-03-04T06:04:12.000Z</published>
    <updated>2016-07-10T11:43:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么要用hexo"><a href="#为什么要用hexo" class="headerlink" title="为什么要用hexo"></a>为什么要用hexo</h2><p>一直觉得<em>wordpress</em>太过臃肿，且插件太多，没有一个好的替代品。舍友推荐了静态博客，感觉挺不错的。比较火的有<em>jekyll</em>和<em>hexo</em>，正好v2ex里有人分享了一个<em>hexo</em>主题—-<strong>fexo</strong>。感觉挺简洁的，于是入坑了。其实<a href="https://www.haomwei.com/technology/maupassant-hexo.html" target="_blank" rel="noopener">Maupassant</a>主题也不错。</p><h2 id="流程记录"><a href="#流程记录" class="headerlink" title="流程记录"></a>流程记录</h2><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo官方文档</a></p><p><a href="http://forsigner.com/2016/02/23/fexo/" target="_blank" rel="noopener">fexo主题</a></p><p>本来是准备在<em>ubuntu</em>虚拟机里安装环境的，结果装<em>nodejs</em>的时候出现了非常多的问题，无奈还是选择<em>windows</em>。<em>windows</em>直接就有一个nodejs安装包，这个是最方便的。安装完了以后，安装<em>hexo</em>会出现问题，<em>google</em>一下，再装缺少的东西就行了。然后会有两个<em>warning</em>，不用管，基本可以使用了。</p><p>接下来是照着文档导出<em>wordpress</em>文章，然后自己再根据需要修改一下。配置一下<em>config.yml</em>，然后<em>generate</em>一下,<em>deploy</em>即可。至此，基本一个站就出来啦。</p><h2 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h2><blockquote><p>1.deploy设置问题<br>2.ignore问题</p></blockquote><p>我用的是ftpsync，因为不是放在github上的，配置信息如下，具体可见官方文档。</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"><span class="code">type: ftpsync</span></span><br><span class="line"><span class="code">host: xxx</span></span><br><span class="line"><span class="code">user: xxx</span></span><br><span class="line"><span class="code">pass: xxx</span></span><br><span class="line"><span class="code">remote: /xx/xx/xx</span></span><br><span class="line"><span class="code">port: 21</span></span><br><span class="line"><span class="code">ignore: favicon.ico</span></span><br><span class="line"><span class="code">verbose: true</span></span><br></pre></td></tr></table></figure><p>这里要注意的是<em>remote</em>信息，也就是路径，最好上ftp看一下，直接复制，不要自己想当然，不然很容易<em>deploy</em>失败的。</p><p>第二个问题就是<em>ignore</em>无效的问题，每次<em>deploy</em>的时候会把你那个目录地下所有的东西都删掉，例如<em>icon</em>。你设置了<em>ignore</em>，但是还是删除了，目前还没找到解决方案。我的解决档案是，把东西放在<em>themes/fexo/source/</em>下，这样就会把东西都一并传上去了。</p><p>总的来说，速度和美观程度很不错，关于使用七牛什么的，这是下一步的考虑方案了。</p><p>以上。</p><p>2016/3/4</p><p>&nbsp;</p><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>上次说的ftp的ignore问题，具体可参考这篇文章。<a href="http://cc8c.net/2015/hexo-ftpsync-bug/" target="_blank" rel="noopener">ftpsync的坑</a></p><p>&nbsp;</p><h2 id="再次更新"><a href="#再次更新" class="headerlink" title="再次更新"></a>再次更新</h2><p>不知为何，那个博客居然404了。。</p><p>废话不多说，还是解决<em>ignore</em>的问题，将其改成如下格式就行了。</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ignore: ['favicon.ico','game.html','Baidu_ife2016', 'qrcode.html']</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;为什么要用hexo&quot;&gt;&lt;a href=&quot;#为什么要用hexo&quot; class=&quot;headerlink&quot; title=&quot;为什么要用hexo&quot;&gt;&lt;/a&gt;为什么要用hexo&lt;/h2&gt;&lt;p&gt;一直觉得&lt;em&gt;wordpress&lt;/em&gt;太过臃肿，且插件太多，没有一个好的替代品
      
    
    </summary>
    
      <category term="技术分享" scheme="http://behappy.cc/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>《艾伦图灵传》记录</title>
    <link href="http://behappy.cc/2015/05/09/turing/"/>
    <id>http://behappy.cc/2015/05/09/turing/</id>
    <published>2015-05-09T02:21:46.000Z</published>
    <updated>2017-07-22T00:48:32.615Z</updated>
    
    <content type="html"><![CDATA[<p>首先吐槽一下李笑来的<em>《把时间当作朋友》</em>第三版，看的过程中感觉都不需要用脑子，全书看完没有惊艳到我的地方，个人认为，不符合豆瓣这么高分的评价，因为看完了就只有一个反应——哦。</p><h2 id="good-part"><a href="#good-part" class="headerlink" title="good part"></a>good part</h2><p>在《如谜的解谜者》第二章，写道，拉普拉斯在1795年总结到：“假如有一位强大的智者，他能综合所有驱动自然的力，以及施力物体的所有情况，并且能够分析所有这些数据，那么对他来说，就没有什么是不确定的。未来就会如同历史一样，展现在他的眼前。”拉普拉斯的观点是，<strong>没有任何事情是不确定的，也许它们看起来像是不确定的，那只是因为人类无法实现必要的测量手段。</strong></p><p>但是爱丁顿却认为，<strong>物理上的“必然”和心理的“必然”没有联系</strong>，物理规则决定了你一定会怎样，但实际上却没有人觉得自己像被线牵着的木偶。他写道，“我的直觉是，并不存在一种能够决定未来的因素，秘密地隐藏在过去当中。”但是，他并不满足于保持“<strong>科学和直觉井水不犯河水</strong>”。因为他也无法否认，身体是服从物理规律的。于是他发问：“<strong>一堆普通的原子，是如何构成一个能思考的系统的</strong>？”（这个问题惊艳到我了！）</p><p>新兴的量子理论认为，<strong>一个事件是绝对不确定的</strong>。薛定谔的概率波和海森堡的不确定原理，使得爱丁顿认为，<strong>思维作用于实体，它也许可以决定那些不确定事件的结果</strong>。但是思维如何决定一个原子的波函数呢？但是量子论中并没有给出解释。于是最后爱丁顿认为，“我们有一种意识，能够决定大脑中一部分或者所有原子的行为。”</p><p>虽然最后没有什么确定的解释，但是这个问题的确是很有趣的，所以我记录下来，分享一下。</p><p>以上。</p><p>2015/5/9</p><p>&nbsp;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先吐槽一下李笑来的&lt;em&gt;《把时间当作朋友》&lt;/em&gt;第三版，看的过程中感觉都不需要用脑子，全书看完没有惊艳到我的地方，个人认为，不符合豆瓣这么高分的评价，因为看完了就只有一个反应——哦。&lt;/p&gt;
&lt;h2 id=&quot;good-part&quot;&gt;&lt;a href=&quot;#good-par
      
    
    </summary>
    
      <category term="书痞之言" scheme="http://behappy.cc/categories/%E4%B9%A6%E7%97%9E%E4%B9%8B%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>读《暗时间》</title>
    <link href="http://behappy.cc/2015/03/28/dark-time/"/>
    <id>http://behappy.cc/2015/03/28/dark-time/</id>
    <published>2015-03-28T01:48:04.000Z</published>
    <updated>2017-07-22T00:46:08.709Z</updated>
    
    <content type="html"><![CDATA[<p>仅站在一个知识匮乏的大学生的角度。</p><p>没有小说的行云流水，没有美文的平淡清雅，仅仅是几篇松散的博文串联起来的一本书，但是却刺激到了我的大脑认知层。起初看时，只是把它当做程序员的碎碎念，亦或是打着噱头的成功类书籍，然而最终我却只能以科普文的方式来看了。此处并不是说这本书的深度不够，恰恰相反，作者的阅读量是我远远无法企及的。这也说明了我的一个问题，对没有干货的书嗤之以鼻，等别人把真正的干货拿出来的时候，你却懵比了，实在是太蠢。</p><p>虽然如此，依然有许多观点令人印象深刻。</p><p>1.<strong>不同任务之间的切换时最耗时的，尽量避免。</strong><br>2.<strong>想方设法给自己持续不断地正反馈，即分割任务。</strong><br>3.<strong>你所拥有的并不取决于记得多少，而在于它们能否在恰当的时候被回忆起来。</strong><br>4.<strong>在记忆时尽你所能将与其关联的线索一并编码放入大脑，线索是能否回忆起的关键，越多越好。</strong><br>5.<strong>永远相信传统阅读与书写的力量。</strong><br>6.<strong>趁着对一件事有热情时，把开头最难的阶段熬过去。（深有感触，过了那个阶段，或许你以后再也不能入门，失去了正反馈的激励就失去了热情。）</strong><br>7.<strong>让琐事来找你，不要在大脑里给它留位置。</strong><br>8.<strong>永远不要忽略存在于大脑中的认知偏见，还有许多错觉，这是从远古社会就存在的，所以我们常常对其毫无察觉。</strong><br>9.<strong>学会哄骗大脑的情绪系统，站在高级认知模块的一队。</strong><br>10.<strong>社交失败的成本近乎于零，勇敢地迈出第一步才是正解。</strong><br>11.<strong>从现在起写一个长期的价值博客。</strong><br>12.<strong>困难的路越走越容易，容易的路越走越难。（自己解决问题，找别人永远只是小聪明，虽然性价比很高）</strong><br>13.<strong>推翻欧几里得式、自上而下式的推理方式，要知道为什么会想到这样证明。</strong><br>14.<strong>贝叶斯公式很牛逼。</strong><br>15.<strong>数学很好玩。</strong></p><p>本书的索引中有许多关于心理学的好书，值得一看。如果我们在生活中不断尝试运用这些知识去改造我们的认知层面，或许受益会是非常大的。下一本或许会是<em>《把时间当做朋友》</em>。</p><p>以上。</p><p>2015/3/28</p><p>&nbsp;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;仅站在一个知识匮乏的大学生的角度。&lt;/p&gt;
&lt;p&gt;没有小说的行云流水，没有美文的平淡清雅，仅仅是几篇松散的博文串联起来的一本书，但是却刺激到了我的大脑认知层。起初看时，只是把它当做程序员的碎碎念，亦或是打着噱头的成功类书籍，然而最终我却只能以科普文的方式来看了。此处并不是说
      
    
    </summary>
    
      <category term="书痞之言" scheme="http://behappy.cc/categories/%E4%B9%A6%E7%97%9E%E4%B9%8B%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>不求有功，但求无过——2014终了</title>
    <link href="http://behappy.cc/2014/12/30/2014-final/"/>
    <id>http://behappy.cc/2014/12/30/2014-final/</id>
    <published>2014-12-30T14:55:32.000Z</published>
    <updated>2018-12-15T04:43:48.995Z</updated>
    
    <content type="html"><![CDATA[<p>虽然想用短短几行涂鸦来概括这么精彩的一年是有点不自量力了，但是总结毕竟是一个良好的习惯啊。（特么的万一以后出名要写自传呢！！！）</p><h1 id="就闲聊些印象深刻的事吧。"><a href="#就闲聊些印象深刻的事吧。" class="headerlink" title="就闲聊些印象深刻的事吧。"></a><strong>就闲聊些印象深刻的事吧。</strong></h1><h2 id="大一最后的考试月"><a href="#大一最后的考试月" class="headerlink" title="大一最后的考试月"></a>大一最后的考试月</h2><p>大概是自高考完以后第一次专注那么长时间了，早上8点到晚上9点，太<em>unbelievable</em>了，再次体验到了学习的快感（真心话）。当然最后结果还是不错的，拿了个一奖。</p><h2 id="暑假打工之收银"><a href="#暑假打工之收银" class="headerlink" title="暑假打工之收银"></a>暑假打工之收银</h2><p>没错，就是小小收银了。虽然的确浪费了我大量的时间，但不得不说还是有益处的。比如改正了我大少爷似得乱扔零钱的坏习惯，同时让我对物价又了一个全新的认识。当然好处还有很多，尤其在你第二天看误差结算时，尤其在你犯错时，尤其在你面对顾客的指责时。（别问我工资！）</p><h2 id="个人网站"><a href="#个人网站" class="headerlink" title="个人网站"></a>个人网站</h2><p>从什么都不懂到什么都懂一点，这个个人网站应该是我这一年做的最正确的选择了。</p><h2 id="搬校区"><a href="#搬校区" class="headerlink" title="搬校区"></a>搬校区</h2><p>搬到了美女多的校区，然后，还是单身dog。这是在江枫宿舍阳台上拍的纪念照，那时候怎么这么会作死。。。<br><img src="/images/jiangfeng.jpg" alt="江枫照片"></p><h2 id="健身"><a href="#健身" class="headerlink" title="健身"></a>健身</h2><p>真是个奇怪的念头，不知当时是哪来的冲动啊，貌似当时想的是如果以后当了程序员就没机会健身了，这么有趣的一个项目不体验多可惜啊。到现在练了也快两个半月了，附一张效果图，等2015再来比较。^_^<br><img src="/images/muscle.jpg" alt="健身肌肉"></p><h1 id="再来说些不怎么满意的事情吧。"><a href="#再来说些不怎么满意的事情吧。" class="headerlink" title="再来说些不怎么满意的事情吧。"></a><strong>再来说些不怎么满意的事情吧。</strong></h1><h2 id="编程方面"><a href="#编程方面" class="headerlink" title="编程方面"></a>编程方面</h2><p>学了python,写了个查询打卡程序。然后就再也没写什么程序了。为了建网站准备学的html+css+php+javascript，最后也只学了html和css。真的是一塌糊涂！</p><h2 id="爱好方面"><a href="#爱好方面" class="headerlink" title="爱好方面"></a>爱好方面</h2><p>网球打了一年还在入门阶段，还在纠结单反双反问题，钟情于费德勒啊，苦于野路子又偷懒还是郁郁不得志。<br>口琴呢，会断断续续地吹几个音符，然后就打入冷宫了。果然没有迅速的反馈我就是坚持不下去，混蛋。<br>这两个爱好我会坚持下去，一定，包括转笔。<strong>世上所有的坚持都是因为热爱。</strong></p><h2 id="其他方面"><a href="#其他方面" class="headerlink" title="其他方面"></a>其他方面</h2><p>有一段时间得了“大二病”，真是羞愧，无知惹得错。<br>电影imdb top 250只看了前50都不到，但是的确很有收获，冲击着我的价值观。<br>没看几本书，这点我是最鄙视自己的。</p><h1 id="2014啊，一百块都不给我就走了"><a href="#2014啊，一百块都不给我就走了" class="headerlink" title="2014啊，一百块都不给我就走了"></a>2014啊，一百块都不给我就走了</h1><p>2014啊，想想真是个烂摊子呢。李宗盛的《寂寞难耐》里“一天又过一天，三十岁就快来，往后的日子怎么对自己交代。”是啊，怎么交代呢？当然里面还有一句“对于未来的爱还是非常期待”，也是比较符合心境的。<strong>我真的非常想去李宗盛的“既然青春留不住”演唱会啊</strong>。。。<br>嗨，这么普普通通，没什么好大不了的。不求有功，但求无过。</p><p>以上。</p><p>2014/12/30</p><p>&nbsp;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;虽然想用短短几行涂鸦来概括这么精彩的一年是有点不自量力了，但是总结毕竟是一个良好的习惯啊。（特么的万一以后出名要写自传呢！！！）&lt;/p&gt;
&lt;h1 id=&quot;就闲聊些印象深刻的事吧。&quot;&gt;&lt;a href=&quot;#就闲聊些印象深刻的事吧。&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
      <category term="无趣随笔" scheme="http://behappy.cc/categories/%E6%97%A0%E8%B6%A3%E9%9A%8F%E7%AC%94/"/>
    
      <category term="年终总结" scheme="http://behappy.cc/categories/%E6%97%A0%E8%B6%A3%E9%9A%8F%E7%AC%94/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
    
  </entry>
  
  <entry>
    <title>python+模拟登录+提取内容</title>
    <link href="http://behappy.cc/2014/11/27/python-login-extract/"/>
    <id>http://behappy.cc/2014/11/27/python-login-extract/</id>
    <published>2014-11-27T08:23:44.000Z</published>
    <updated>2017-07-22T00:46:40.534Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>今天，给大家推荐一门有趣的语言——python，相信大家一定不陌生。那么可以用来做什么呢，本文主要用于模拟登录并提取一些需要的内容，当然，再仔细研究的话，还可以写一些签到的小工具。 <strong>注：本文所用python版本为3.4.2</strong>。 所需工具：<strong>python3</strong>、<strong>requests库</strong>、<strong>Beautifulsoup库</strong>。 首先，先从模拟登录的原理开始，主要讲post。 当登录一个网站的时候，相当于你带着一堆数据去访问一个网址，就像带着一堆见面礼去拜访某人家里。这里的见面礼就是一些headers，data和一些必要的数据，有些主人呢，不需要带什么见面礼就会给你开门招待你，就是无需登录的网站。有些主人呢，需要看中你的见面礼才会给你提供饭菜啊什么的，就是需要输入一些身份验证的数据才行，如登录。 当我们用浏览器登录时，我们只需要输入网址，输入账号密码就行了，浏览器会自动帮我们提交的，当然我们可以用python这门语言来实现伪装成浏览器提交数据。 <strong>大致过程如下：发送数据给网站，网站接收到，成功匹配，回应数据给请求者，提取内容。</strong> 那么我们到底要发送哪些数据给服务器呢？答案是按实际情况来找。就像上面所提的，或许你什么都不用带就可以访问，或许你要带一大堆东西才能访问。后面，我们会找个简单的示例，现在先来简单介绍一下requests库和beautifulsoup库。</p><h2 id="1-requests"><a href="#1-requests" class="headerlink" title="1.requests"></a>1.<strong>requests</strong></h2><p>简而言之，这个库就是用来替我们发送接收数据的，非常强大的库。以前的模拟登录用的是<strong>urllib2（py2.x版本）</strong>，<strong>urllib.request（py3.x版本）</strong>，有点复杂，有兴趣的朋友可以研究一下。完全使用方法可以找官方中文文档，此处仅介绍post使用方法：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">s = requests.session()                                      <span class="comment">#创建会话，类似cookiejar</span></span><br><span class="line">data = &#123;<span class="string">'username'</span>:<span class="string">'username'</span>,<span class="string">'password'</span>:<span class="string">'password'</span>&#125;        <span class="comment">#要Post的数据，字典形式</span></span><br><span class="line">s.post(<span class="string">'http://www.zuilexuan.com/login'</span>,data=data)          <span class="comment">#post数据到指定网址，自动转换为表单形式</span></span><br><span class="line">r = s.get(http://www.zuilexuan.com/about_us.html)           <span class="comment">#得到这个网页的内容</span></span><br><span class="line">print(r.text)                                               <span class="comment">#打印</span></span><br></pre></td></tr></table></figure></p><h2 id="2-BeautifulSoup"><a href="#2-BeautifulSoup" class="headerlink" title="2.BeautifulSoup"></a>2.<strong>BeautifulSoup</strong></h2><p>好了，接下来是Beautifulsoup这个库，是一个处理文档的很强大的库，如果到处都用正则的话，显然很累，所以这个库算是帮大忙啦！完全使用方法也请自行找官方中文文档，此处仅介绍提取标签内容：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">html_doc = <span class="string">'''&lt;h1&gt;哈哈&lt;/h1&gt;&lt;td&gt;啦啦&lt;/td&gt;'''</span></span><br><span class="line">soup = BeautifulSoup(html_doc)     <span class="comment">#使用BeautifulSoup库来解析这段内容，官方文档上是爱丽丝的仙境</span></span><br><span class="line">print(soup.find_all(<span class="string">'td'</span>))                    <span class="comment">#打印标签为td的所有内容，如果只想打印内容，需要使用content</span></span><br></pre></td></tr></table></figure></p><p>那么接下来要完成模拟登录一个页面就很简单了，<strong>requests</strong>登录，<strong>BeautifulSoup</strong>提取。那么现在问题来了，（卖萌技术哪家强），我们需要发送哪些数据呢？在哪里能看到呢？本文以chrome浏览器为示例，F12调处开发者工具，在登录之前打开，下面以我学校查询打卡为实例。</p><p><img src="/images/daka1.jpg" alt="daka1"></p><p>f12打开开发者工具，调到Network,<strong>保证①处红灯亮</strong>，<strong>②处是禁止缓存</strong>，接着输入用户名和密码，就会有许多东西跳出来啦，<strong>③处是找post</strong>，这里面才会有我们需要发送的数据。打开来看看呢</p><p><img src="/images/daka2.jpg" alt="daka2"></p><p>红框框里面就是我们需要发送的数据了，三个，算是比较简单了。有username,password,chkuser,密码也是明文的，所以只要post这几个数据给这个网址就行啦。以下是源码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests <span class="comment">#引入requests库 </span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup             <span class="comment">#引入BeautifulSoup库 </span></span><br><span class="line">loginurl = <span class="string">'http://XXX/index.asp'</span>          <span class="comment">#要登录的那个地址 </span></span><br><span class="line">geturl = [<span class="string">'http://XXX/kwkq/xskwcx.asp?action=zccx'</span>,         <span class="comment">#查询早上打卡地址 </span></span><br><span class="line">          <span class="string">'http://XXX/kwkq/xskwcx.asp?action=jlbcx'</span>,]              <span class="comment">#查询下午打卡地址 </span></span><br><span class="line">username = <span class="string">'XXXXX'</span>               <span class="comment">#你的用户名 </span></span><br><span class="line">password = <span class="string">'XX'</span>               <span class="comment">#你的密码 </span></span><br><span class="line">logindata = &#123;<span class="string">'username'</span>:username,<span class="string">'password'</span>:password,<span class="string">'chkuser'</span>:<span class="string">'true'</span>,&#125;        <span class="comment">#发送的数据 </span></span><br><span class="line">s = requests.session()                      <span class="comment">#创建会话 </span></span><br><span class="line">s.post(url=loginurl,data=logindata)               <span class="comment">#发送数据 </span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> geturl: r = s.get(item)                      <span class="comment">#获取网页内容 </span></span><br><span class="line">    soup = BeautifulSoup(r.content.decode(<span class="string">'gbk'</span>))       <span class="comment">#BeautifulSoup处理，gbk是因为编码问题    </span></span><br><span class="line"></span><br><span class="line">print(soup.find_all(colspan=<span class="string">"4"</span>))              <span class="comment">#打印出属性里有colspan='4'的内容 </span></span><br><span class="line">......</span><br><span class="line">[&lt;td colspan=<span class="string">"4"</span>&gt;出勤累计： <span class="number">30</span> 次  本学期早操应出<span class="number">30</span>次 </span><br><span class="line">&lt;/td&gt;]</span><br><span class="line">[&lt;td colspan=<span class="string">"4"</span>&gt;出勤累计： <span class="number">10</span> 次  本学期俱乐部应出<span class="number">10</span>次 </span><br><span class="line">&lt;/td&gt;]</span><br></pre></td></tr></table></figure><p>当然也可以<strong>print(soup.find_all(‘td’))</strong>，不过打印的内容就比较多啦！</p><p>至于做百度自动登录，人人自动登录。post的数据密码都经过加密的，rsa算法和md5吧，需要更深层次的研究，以后做出来了再给大家分享吧。</p><p>以上。</p><p>2014/11/27</p><p>&nbsp;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;今天，给大家推荐一门有趣的语言——python，相信大家一定不陌生。那么可以用来做什么呢，本文主要用于模拟登录并提取一些需要的内容，当然，再
      
    
    </summary>
    
      <category term="技术分享" scheme="http://behappy.cc/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
  </entry>
  
</feed>
